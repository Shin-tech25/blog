{"version":3,"file":"component---src-templates-service-post-js-5b8282cbcec827967bdd.js","mappings":"uJAiDA,IAvCYA,IAAuC,IAADC,EAAAC,EAAAC,EAAA,IAArC,YAAEC,EAAW,MAAEC,EAAK,SAAEC,GAAUN,EAC3C,MAAM,KAAEO,IAASC,EAAAA,EAAAA,gBAAe,cAgB1BC,EAAkBL,GAAeG,EAAKG,aAAaN,YACnDO,EAAgC,QAApBV,EAAGM,EAAKG,oBAAY,IAAAT,OAAA,EAAjBA,EAAmBI,MAExC,OACEO,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQD,EAAe,GAAGN,OAAWM,IAAiBN,GACtDO,EAAAA,cAAA,QAAMC,KAAK,cAAcC,QAASL,IAClCG,EAAAA,cAAA,QAAMG,SAAS,WAAWD,QAAST,IACnCO,EAAAA,cAAA,QAAMG,SAAS,iBAAiBD,QAASL,IACzCG,EAAAA,cAAA,QAAMG,SAAS,UAAUD,QAAQ,YACjCF,EAAAA,cAAA,QAAMC,KAAK,eAAeC,QAAQ,YAClCF,EAAAA,cAAA,QACEC,KAAK,kBACLC,SAA0B,QAAjBZ,EAAAK,EAAKG,oBAAY,IAAAR,GAAQ,QAARC,EAAjBD,EAAmBc,cAAM,IAAAb,OAAR,EAAjBA,EAA2Bc,UAAW,KAEjDL,EAAAA,cAAA,QAAMC,KAAK,gBAAgBC,QAAST,IACpCO,EAAAA,cAAA,QAAMC,KAAK,sBAAsBC,QAASL,IACzCH,EACA,C,mGCxCP,MAsBaY,EAAOC,IAAyC,IAAtCC,MAAQC,eAAgBC,IAAQH,EACrD,OACEP,EAAAA,cAACW,EAAAA,EAAG,CACFlB,MAAOiB,EAAKE,YAAYnB,MACxBD,YAAakB,EAAKE,YAAYpB,aAAekB,EAAKG,SAClD,EAIN,UA/B4BzB,IAAyE,IAADC,EAAA,IAArEmB,MAAM,SAAEM,EAAQ,KAAEC,EAAI,KAAEpB,EAAMc,eAAgBC,GAAM,SAAEM,GAAU5B,EAC7F,MAAM6B,GAA6B,QAAjB5B,EAAAM,EAAKG,oBAAY,IAAAT,OAAA,EAAjBA,EAAmBI,QAAS,QAE9C,OACEO,EAAAA,cAACkB,EAAAA,EAAM,CAACF,SAAUA,EAAUvB,MAAOwB,GACjCjB,EAAAA,cAAA,WACEmB,UAAU,eACVC,WAAS,EACTC,SAAS,6BAETrB,EAAAA,cAAA,cACEA,EAAAA,cAAA,MAAIsB,SAAS,YAAYZ,EAAKE,YAAYnB,QAE5CO,EAAAA,cAAA,WACEuB,wBAAyB,CAAEC,OAAQd,EAAKe,MACxCH,SAAS,iBAGN,C","sources":["webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/templates/service-post.js"],"sourcesContent":["/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst ServicePostTemplate = ({ data: { previous, next, site, markdownRemark: post }, location }) => {\n  const siteTitle = site.siteMetadata?.title || `Title`\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <article\n        className=\"service-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n      </article>\n    </Layout>\n  )\n}\n\nexport const Head = ({ data: { markdownRemark: post } }) => {\n  return (\n    <Seo\n      title={post.frontmatter.title}\n      description={post.frontmatter.description || post.excerpt}\n    />\n  )\n}\n\nexport default ServicePostTemplate\n\nexport const pageQuery = graphql`\n  query ServicePostBySlug(\n    $id: String!\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"YYYY-MM-DD\")\n        description\n        featuredImage {\n          childImageSharp {\n            gatsbyImageData(layout: CONSTRAINED)\n          }\n        }\n      }\n    }\n  }\n`"],"names":["_ref","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","description","title","children","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","React","name","content","property","social","twitter","Head","_ref2","data","markdownRemark","post","Seo","frontmatter","excerpt","previous","next","location","siteTitle","Layout","className","itemScope","itemType","itemProp","dangerouslySetInnerHTML","__html","html"],"sourceRoot":""}