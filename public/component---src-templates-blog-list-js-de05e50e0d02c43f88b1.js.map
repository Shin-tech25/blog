{"version":3,"file":"component---src-templates-blog-list-js-de05e50e0d02c43f88b1.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/featured-articles.js","webpack://gatsby-starter-blog/./src/styles/featured-articles.module.css","webpack://gatsby-starter-blog/./src/styles/blog-list.module.css","webpack://gatsby-starter-blog/./src/templates/blog-list.js"],"sourcesContent":["import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport PostItem from \"./post-item\"\nimport * as styles from \"../styles/featured-articles.module.css\"\n\nconst FeaturedArticles = () => {\n  // useStaticQueryフックでクエリを実行\n  const data = useStaticQuery(graphql`\n    query {\n      allPopularArticlesYaml {\n        nodes {\n          slug\n        }\n      }\n      allMarkdownRemark(\n        filter: { frontmatter: { templateKey: { eq: \"blog-post\" } } }\n      ) {\n        nodes {\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"YYYY-MM-DD\")\n            title\n            description\n            tags\n            featuredImage {\n              childImageSharp {\n                gatsbyImageData(layout: CONSTRAINED)\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  const popularSlugs = data.allPopularArticlesYaml.nodes.map(node => node.slug)\n  const allPosts = data.allMarkdownRemark.nodes\n\n  return (\n    <section className={styles.featuredArticles}>\n      <h2 className={styles.sectionTitle}>人気の記事</h2>\n      <div className={styles.postList}>\n        {popularSlugs.map(slug => {\n          const found = allPosts.find(p => p.fields.slug === slug)\n          if (!found) {\n            return (\n              <p key={slug} style={{ color: \"red\" }}>\n                該当記事が見つかりません: {slug}\n              </p>\n            )\n          }\n          return (\n            <PostItem\n              key={slug}\n              post={{\n                slug: found.fields.slug,\n                title: found.frontmatter.title,\n                date: found.frontmatter.date,\n                tags: found.frontmatter.tags,\n                description: found.frontmatter.description,\n                featuredImage: found.frontmatter.featuredImage,\n              }}\n            />\n          )\n        })}\n      </div>\n    </section>\n  )\n}\n\nexport default FeaturedArticles\n","// extracted by mini-css-extract-plugin\nexport var featuredArticles = \"featured-articles-module--featuredArticles--a8437\";\nexport var postList = \"featured-articles-module--postList--0d2e8\";\nexport var sectionTitle = \"featured-articles-module--sectionTitle--9d23c\";","// extracted by mini-css-extract-plugin\nexport var active = \"blog-list-module--active--cd174\";\nexport var articleLink = \"blog-list-module--articleLink--80dfa\";\nexport var articleList = \"blog-list-module--articleList--04ef3\";\nexport var blogList = \"blog-list-module--blogList--e9855\";\nexport var featuredSection = \"blog-list-module--featuredSection--dd552\";\nexport var featuredTags = \"blog-list-module--featuredTags--2e135\";\nexport var pagination = \"blog-list-module--pagination--b711c\";\nexport var paginationItem = \"blog-list-module--pagination-item--193b3\";\nexport var paginationNextPrev = \"blog-list-module--pagination-next-prev--bddff\";\nexport var paginationWrapper = \"blog-list-module--paginationWrapper--f7820\";\nexport var postList = \"blog-list-module--postList--8bb1e\";\nexport var sectionTitle = \"blog-list-module--sectionTitle--a32bb\";\nexport var tagItem = \"blog-list-module--tagItem--49e24\";\nexport var tagList = \"blog-list-module--tagList--35fd7\";","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport kebabCase from \"lodash/kebabCase\"\nimport Layout from \"../components/layout\"\nimport PostItem from \"../components/post-item\"\nimport FeaturedArticles from \"../components/featured-articles\"\nimport * as styles from \"../styles/blog-list.module.css\"\n\nconst BlogList = ({ data, pageContext, location }) => {\n  const posts = data.allMarkdownRemark\n  const tags = data.allTags.group\n  const { currentPage, numPages } = pageContext\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location}>\n        <p>No blog posts found.</p>\n      </Layout>\n    )\n  }\n\n  const FeaturedTags = ({ tags }) => {\n    if (!tags || tags.length === 0) {\n      return <p>No tags found.</p> // タグが存在しない場合の処理\n    }\n    // タグを投稿数でソート（降順）し、上位20件を取得\n    const sortedTags = tags\n      .sort((a, b) => b.totalCount - a.totalCount)\n      .slice(0, 20)\n\n    return (\n      <section className={styles.featuredTags}>\n        <h2 className={styles.sectionTitle}>人気のタグ</h2>\n        <ul className={styles.tagList}>\n          {sortedTags.map(tag => (\n            <li key={tag.fieldValue} className={styles.tagItem}>\n              <Link to={`/tags/${kebabCase(tag.fieldValue)}/`}>\n                {tag.fieldValue} ({tag.totalCount} posts)\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </section>\n    )\n  }\n\n  const FeaturedSection = () => (\n    <div className={styles.featuredSection}>\n      <FeaturedArticles />\n      <FeaturedTags tags={tags} /> {/* 全タグ情報を渡す */}\n    </div>\n  )\n\n  return (\n    <Layout location={location}>\n      {currentPage === 1 && <FeaturedSection />}\n      {currentPage === 1 && <h2 className={styles.sectionTitle}>最近の投稿</h2>}\n\n      <div className={styles.postList}>\n        {posts.nodes.map(post => (\n          <PostItem\n            key={post.fields.slug}\n            post={{\n              slug: post.fields.slug,\n              title: post.frontmatter.title,\n              date: post.frontmatter.date,\n              tags: post.frontmatter.tags,\n              description: post.frontmatter.description,\n              featuredImage: post.frontmatter.featuredImage,\n            }}\n          />\n        ))}\n      </div>\n\n      {/* ページネーション */}\n      <div className={styles.paginationWrapper}>\n        <ul className={styles.pagination}>\n          {currentPage > 1 && (\n            <li>\n              <Link\n                to={currentPage - 1 === 1 ? `/` : `/page/${currentPage - 1}/`}\n                className={styles.paginationNextPrev}\n              >\n                Prev\n              </Link>\n            </li>\n          )}\n          {Array.from({ length: numPages }).map((_, index) => (\n            <li key={index}>\n              <Link\n                to={index === 0 ? `/` : `/page/${index + 1}/`}\n                className={`${styles.paginationItem} ${\n                  currentPage === index + 1 ? styles.active : \"\"\n                }`}\n              >\n                {index + 1}\n              </Link>\n            </li>\n          ))}\n          {currentPage < numPages && (\n            <li>\n              <Link\n                to={`/page/${currentPage + 1}/`}\n                className={styles.paginationNextPrev}\n              >\n                Next\n              </Link>\n            </li>\n          )}\n        </ul>\n      </div>\n    </Layout>\n  )\n}\n\nexport default BlogList\n\nexport const pageQuery = graphql`\n  query ($skip: Int!, $limit: Int!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { frontmatter: { date: DESC } }\n      filter: { frontmatter: { templateKey: { eq: \"blog-post\" } } }\n      skip: $skip\n      limit: $limit\n    ) {\n      nodes {\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"YYYY-MM-DD\")\n          title\n          description\n          tags\n          featuredImage {\n            childImageSharp {\n              gatsbyImageData(layout: CONSTRAINED)\n            }\n          }\n        }\n      }\n    }\n    allTags: allMarkdownRemark(\n      filter: {\n        frontmatter: { templateKey: { eq: \"blog-post\" }, tags: { ne: null } }\n      }\n    ) {\n      group(field: { frontmatter: { tags: SELECT } }) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`\n"],"names":["FeaturedArticles","data","useStaticQuery","popularSlugs","allPopularArticlesYaml","nodes","map","node","slug","allPosts","allMarkdownRemark","React","className","found","find","p","fields","PostItem","key","post","title","frontmatter","date","tags","description","featuredImage","style","color","paginationNextPrev","_ref","pageContext","location","posts","allTags","group","currentPage","numPages","length","Layout","FeaturedTags","_ref2","sortedTags","sort","a","b","totalCount","slice","styles","tag","fieldValue","Link","to","kebabCase","FeaturedSection","Array","from","_","index"],"sourceRoot":""}