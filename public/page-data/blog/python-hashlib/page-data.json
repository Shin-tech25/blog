{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/python-hashlib/","result":{"data":{"site":{"siteMetadata":{"title":"Developer's blog"}},"markdownRemark":{"id":"b835272d-4cb7-5073-9d95-ff6d18b42266","excerpt":"Python では、データの検証やセキュリティ強化を目的として、ハッシュ値の計算にモジュールを利用できます。本記事では、モジュールの基本的な使い方や、ハッシュアルゴリズムの選択方法、具体的なユースケースについて詳しく解説します。…","tableOfContents":"<ul>\n<li>\n<p><a href=\"#1-%E3%83%8F%E3%83%83%E3%82%B7%E3%83%A5%E5%80%A4%E3%81%A8%E3%81%AF\">1. ハッシュ値とは</a></p>\n</li>\n<li>\n<p><a href=\"#2-%E5%88%A9%E7%94%A8%E5%8F%AF%E8%83%BD%E3%81%AA%E3%83%8F%E3%83%83%E3%82%B7%E3%83%A5%E3%82%A2%E3%83%AB%E3%82%B4%E3%83%AA%E3%82%BA%E3%83%A0\">2. 利用可能なハッシュアルゴリズム</a></p>\n<ul>\n<li><a href=\"#%E4%B8%BB%E3%81%AA%E3%83%8F%E3%83%83%E3%82%B7%E3%83%A5%E3%82%A2%E3%83%AB%E3%82%B4%E3%83%AA%E3%82%BA%E3%83%A0%E3%81%AE%E4%BE%8B\">主なハッシュアルゴリズムの例</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#3-%E3%83%8F%E3%83%83%E3%82%B7%E3%83%A5%E5%80%A4%E3%81%AE%E7%94%9F%E6%88%90%E6%96%B9%E6%B3%95\">3. ハッシュ値の生成方法</a></p>\n<ul>\n<li><a href=\"#%E4%BB%96%E3%81%AE%E3%82%A2%E3%83%AB%E3%82%B4%E3%83%AA%E3%82%BA%E3%83%A0%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%99%E3%82%8B%E5%A0%B4%E5%90%88\">他のアルゴリズムを使用する場合</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#4-%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AE%E3%83%81%E3%82%A7%E3%83%83%E3%82%AF%E3%82%B5%E3%83%A0%E8%A8%88%E7%AE%97\">4. ファイルのチェックサム計算</a></p>\n</li>\n<li>\n<p><a href=\"#5-%E3%83%91%E3%82%B9%E3%83%AF%E3%83%BC%E3%83%89%E3%81%AE%E3%83%8F%E3%83%83%E3%82%B7%E3%83%A5%E5%8C%96%E3%81%A8%E9%8D%B5%E5%B0%8E%E5%87%BA\">5. パスワードのハッシュ化と鍵導出</a></p>\n<ul>\n<li><a href=\"#%E5%AE%89%E5%85%A8%E3%81%AA%E3%83%91%E3%82%B9%E3%83%AF%E3%83%BC%E3%83%89%E3%83%8F%E3%83%83%E3%82%B7%E3%83%A5%E3%81%AE%E4%BE%8B\">安全なパスワードハッシュの例</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#6-hashlib-%E3%81%AE%E6%B3%A8%E6%84%8F%E7%82%B9%E3%81%A8%E3%83%99%E3%82%B9%E3%83%88%E3%83%97%E3%83%A9%E3%82%AF%E3%83%86%E3%82%A3%E3%82%B9\">6. hashlib の注意点とベストプラクティス</a></p>\n<ul>\n<li><a href=\"#%E3%82%88%E3%81%8F%E3%81%82%E3%82%8B%E3%82%A8%E3%83%A9%E3%83%BC\">よくあるエラー</a></li>\n<li><a href=\"#%E6%8E%A8%E5%A5%A8%E4%BA%8B%E9%A0%85\">推奨事項</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#7-%E3%81%BE%E3%81%A8%E3%82%81\">7. まとめ</a></p>\n</li>\n</ul>","html":"<p>Python では、データの検証やセキュリティ強化を目的として、ハッシュ値の計算に<code class=\"language-text\">hashlib</code>モジュールを利用できます。本記事では、<code class=\"language-text\">hashlib</code>モジュールの基本的な使い方や、ハッシュアルゴリズムの選択方法、具体的なユースケースについて詳しく解説します。</p>\n<h2 id=\"1-ハッシュ値とは\" style=\"position:relative;\"><a href=\"#1-%E3%83%8F%E3%83%83%E3%82%B7%E3%83%A5%E5%80%A4%E3%81%A8%E3%81%AF\" aria-label=\"1 ハッシュ値とは permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. ハッシュ値とは</h2>\n<p>ハッシュ値は、元のデータから計算される一定長の文字列です。同じデータからは常に同じハッシュ値が得られる一方、異なるデータからは高確率で異なるハッシュ値が生成されます。<code class=\"language-text\">hashlib</code>では以下の特性を持つハッシュ値を生成します。</p>\n<ul>\n<li><strong>一方向性</strong>: ハッシュ値から元のデータを復元することはできません。</li>\n<li><strong>一貫性</strong>: 同じ入力データに対しては常に同じハッシュ値が計算されます。</li>\n</ul>\n<p>主に以下のような用途で使用されます。</p>\n<ul>\n<li>ファイルの整合性チェック</li>\n<li>パスワードの保存と認証</li>\n<li>データベースのキー生成</li>\n</ul>\n<h2 id=\"2-利用可能なハッシュアルゴリズム\" style=\"position:relative;\"><a href=\"#2-%E5%88%A9%E7%94%A8%E5%8F%AF%E8%83%BD%E3%81%AA%E3%83%8F%E3%83%83%E3%82%B7%E3%83%A5%E3%82%A2%E3%83%AB%E3%82%B4%E3%83%AA%E3%82%BA%E3%83%A0\" aria-label=\"2 利用可能なハッシュアルゴリズム permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 利用可能なハッシュアルゴリズム</h2>\n<p>Python の<code class=\"language-text\">hashlib</code>モジュールでは、複数のハッシュアルゴリズムがサポートされています。利用可能なアルゴリズムは環境によって異なりますが、以下のコードで確認できます。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> hashlib\n\n<span class=\"token comment\"># 利用可能なアルゴリズム一覧を取得</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>hashlib<span class=\"token punctuation\">.</span>algorithms_available<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 全プラットフォームでサポートされるアルゴリズム一覧</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>hashlib<span class=\"token punctuation\">.</span>algorithms_guaranteed<span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"主なハッシュアルゴリズムの例\" style=\"position:relative;\"><a href=\"#%E4%B8%BB%E3%81%AA%E3%83%8F%E3%83%83%E3%82%B7%E3%83%A5%E3%82%A2%E3%83%AB%E3%82%B4%E3%83%AA%E3%82%BA%E3%83%A0%E3%81%AE%E4%BE%8B\" aria-label=\"主なハッシュアルゴリズムの例 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>主なハッシュアルゴリズムの例</h3>\n<table>\n<thead>\n<tr>\n<th>ハッシュアルゴリズム</th>\n<th>出力サイズ (ビット)</th>\n<th>用途例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>SHA-256</td>\n<td>256</td>\n<td>高いセキュリティが必要な場合</td>\n</tr>\n<tr>\n<td>MD5</td>\n<td>128</td>\n<td>チェックサム計算 (セキュリティには非推奨)</td>\n</tr>\n<tr>\n<td>SHA-1</td>\n<td>160</td>\n<td>一部の既存システム (セキュリティには非推奨)</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p><strong>注意</strong>: MD5 や SHA-1 は脆弱性が発見されており、セキュリティ目的では使用しないでください。</p>\n</blockquote>\n<h2 id=\"3-ハッシュ値の生成方法\" style=\"position:relative;\"><a href=\"#3-%E3%83%8F%E3%83%83%E3%82%B7%E3%83%A5%E5%80%A4%E3%81%AE%E7%94%9F%E6%88%90%E6%96%B9%E6%B3%95\" aria-label=\"3 ハッシュ値の生成方法 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. ハッシュ値の生成方法</h2>\n<p>以下は、SHA-256 アルゴリズムを使用してハッシュ値を計算する基本的な例です。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> hashlib\n\n<span class=\"token comment\"># SHA-256オブジェクトを生成</span>\nhash_obj <span class=\"token operator\">=</span> hashlib<span class=\"token punctuation\">.</span>sha256<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># バイト列を渡してハッシュ値を計算</span>\ndata <span class=\"token operator\">=</span> <span class=\"token string\">\"Python学習用のデータ\"</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nhash_obj<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># ハッシュ値を取得</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>hash_obj<span class=\"token punctuation\">.</span>hexdigest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 16進数文字列</span></code></pre></div>\n<h3 id=\"他のアルゴリズムを使用する場合\" style=\"position:relative;\"><a href=\"#%E4%BB%96%E3%81%AE%E3%82%A2%E3%83%AB%E3%82%B4%E3%83%AA%E3%82%BA%E3%83%A0%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%99%E3%82%8B%E5%A0%B4%E5%90%88\" aria-label=\"他のアルゴリズムを使用する場合 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>他のアルゴリズムを使用する場合</h3>\n<p>同じ手順で、<code class=\"language-text\">hashlib.md5()</code>や<code class=\"language-text\">hashlib.sha1()</code>などを使用できます。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># MD5を使用する例</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>hashlib<span class=\"token punctuation\">.</span>md5<span class=\"token punctuation\">(</span><span class=\"token string\">\"Python学習用のデータ\"</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>hexdigest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"4-ファイルのチェックサム計算\" style=\"position:relative;\"><a href=\"#4-%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AE%E3%83%81%E3%82%A7%E3%83%83%E3%82%AF%E3%82%B5%E3%83%A0%E8%A8%88%E7%AE%97\" aria-label=\"4 ファイルのチェックサム計算 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. ファイルのチェックサム計算</h2>\n<p>ファイルの整合性を確認する際には、ファイル全体をハッシュ化してチェックサムを生成します。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> hashlib\n\n<span class=\"token comment\"># ファイルのMD5チェックサムを計算</span>\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"example_file.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"rb\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    hash_md5 <span class=\"token operator\">=</span> hashlib<span class=\"token punctuation\">.</span>md5<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">while</span> chunk <span class=\"token operator\">:=</span> f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token number\">8192</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        hash_md5<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span>chunk<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>hash_md5<span class=\"token punctuation\">.</span>hexdigest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"5-パスワードのハッシュ化と鍵導出\" style=\"position:relative;\"><a href=\"#5-%E3%83%91%E3%82%B9%E3%83%AF%E3%83%BC%E3%83%89%E3%81%AE%E3%83%8F%E3%83%83%E3%82%B7%E3%83%A5%E5%8C%96%E3%81%A8%E9%8D%B5%E5%B0%8E%E5%87%BA\" aria-label=\"5 パスワードのハッシュ化と鍵導出 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. パスワードのハッシュ化と鍵導出</h2>\n<p>パスワードを安全に保存するためには、ソルトを用いた鍵導出処理が必要です。<code class=\"language-text\">hashlib.pbkdf2_hmac()</code>を使用することで実現できます。</p>\n<h3 id=\"安全なパスワードハッシュの例\" style=\"position:relative;\"><a href=\"#%E5%AE%89%E5%85%A8%E3%81%AA%E3%83%91%E3%82%B9%E3%83%AF%E3%83%BC%E3%83%89%E3%83%8F%E3%83%83%E3%82%B7%E3%83%A5%E3%81%AE%E4%BE%8B\" aria-label=\"安全なパスワードハッシュの例 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>安全なパスワードハッシュの例</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> hashlib\n<span class=\"token keyword\">import</span> os\n\n<span class=\"token comment\"># パスワードハッシュを生成</span>\npassword <span class=\"token operator\">=</span> <span class=\"token string\">\"安全なパスワード\"</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nsalt <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>urandom<span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># ランダムなソルトを生成</span>\nhashed_password <span class=\"token operator\">=</span> hashlib<span class=\"token punctuation\">.</span>pbkdf2_hmac<span class=\"token punctuation\">(</span><span class=\"token string\">\"sha256\"</span><span class=\"token punctuation\">,</span> password<span class=\"token punctuation\">,</span> salt<span class=\"token punctuation\">,</span> <span class=\"token number\">100000</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>hashed_password<span class=\"token punctuation\">.</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"6-hashlib-の注意点とベストプラクティス\" style=\"position:relative;\"><a href=\"#6-hashlib-%E3%81%AE%E6%B3%A8%E6%84%8F%E7%82%B9%E3%81%A8%E3%83%99%E3%82%B9%E3%83%88%E3%83%97%E3%83%A9%E3%82%AF%E3%83%86%E3%82%A3%E3%82%B9\" aria-label=\"6 hashlib の注意点とベストプラクティス permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. hashlib の注意点とベストプラクティス</h2>\n<h3 id=\"よくあるエラー\" style=\"position:relative;\"><a href=\"#%E3%82%88%E3%81%8F%E3%81%82%E3%82%8B%E3%82%A8%E3%83%A9%E3%83%BC\" aria-label=\"よくあるエラー permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>よくあるエラー</h3>\n<ul>\n<li><strong>文字列を直接渡す</strong>: ハッシュ計算にはバイト列が必要です。文字列は<code class=\"language-text\">encode()</code>でバイト列に変換してください。</li>\n<li><strong>短いソルトの使用</strong>: レインボーテーブル攻撃に対抗するため、十分な長さのソルトを使用することが推奨されます。</li>\n</ul>\n<h3 id=\"推奨事項\" style=\"position:relative;\"><a href=\"#%E6%8E%A8%E5%A5%A8%E4%BA%8B%E9%A0%85\" aria-label=\"推奨事項 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>推奨事項</h3>\n<ul>\n<li>セキュリティ用途では、<strong>SHA-256</strong>以上のアルゴリズムを使用する。</li>\n<li>パスワード保存には、<strong>PBKDF2</strong>や<strong>bcrypt</strong>を利用する。</li>\n</ul>\n<h2 id=\"7-まとめ\" style=\"position:relative;\"><a href=\"#7-%E3%81%BE%E3%81%A8%E3%82%81\" aria-label=\"7 まとめ permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7. まとめ</h2>\n<p><code class=\"language-text\">hashlib</code>モジュールを使用すると、Python で簡単にハッシュ値を生成でき、データの検証やセキュリティ強化に活用できます。用途に応じて適切なアルゴリズムを選択し、安全性を考慮した実装を心がけましょう。</p>","frontmatter":{"title":"Pythonでハッシュ値を生成する方法 - hashlib","date":"2025-02-11","description":"Python標準ライブラリのhashlibモジュールを使用して、ハッシュ値の生成、暗号化、セキュリティ強化の方法を詳しく解説します。SHA-256やMD5を含むアルゴリズムの使い分けや、ファイルのチェックサム計算、鍵導出処理の実例も紹介。","tags":["Python","hashlib","暗号化","セキュリティ"],"featuredImage":{"publicURL":"/static/becfdfbe97644644be53ae4b70532f68/security.jpg","childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#181818","images":{"fallback":{"src":"/static/becfdfbe97644644be53ae4b70532f68/3c367/security.jpg","srcSet":"/static/becfdfbe97644644be53ae4b70532f68/19e71/security.jpg 128w,\n/static/becfdfbe97644644be53ae4b70532f68/68974/security.jpg 256w,\n/static/becfdfbe97644644be53ae4b70532f68/3c367/security.jpg 512w","sizes":"(min-width: 512px) 512px, 100vw"},"sources":[{"srcSet":"/static/becfdfbe97644644be53ae4b70532f68/6766a/security.webp 128w,\n/static/becfdfbe97644644be53ae4b70532f68/22bfc/security.webp 256w,\n/static/becfdfbe97644644be53ae4b70532f68/d689f/security.webp 512w","type":"image/webp","sizes":"(min-width: 512px) 512px, 100vw"}]},"width":512,"height":512}}}}},"relatedPosts":{"nodes":[{"fields":{"slug":"/python-secrets/"},"frontmatter":{"title":"Pythonでセキュアな乱数を生成する - secrets","date":"2025-02-09","tags":["Python","セキュリティ","secrets","random"],"description":"Pythonのsecretsモジュールを使って、安全なパスワードやトークンを生成する方法を解説。タイミング攻撃への対策や実用例も詳しく紹介します。","featuredImage":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#181818","images":{"fallback":{"src":"/static/becfdfbe97644644be53ae4b70532f68/3c367/security.jpg","srcSet":"/static/becfdfbe97644644be53ae4b70532f68/19e71/security.jpg 128w,\n/static/becfdfbe97644644be53ae4b70532f68/68974/security.jpg 256w,\n/static/becfdfbe97644644be53ae4b70532f68/3c367/security.jpg 512w","sizes":"(min-width: 512px) 512px, 100vw"},"sources":[{"srcSet":"/static/becfdfbe97644644be53ae4b70532f68/6766a/security.webp 128w,\n/static/becfdfbe97644644be53ae4b70532f68/22bfc/security.webp 256w,\n/static/becfdfbe97644644be53ae4b70532f68/d689f/security.webp 512w","type":"image/webp","sizes":"(min-width: 512px) 512px, 100vw"}]},"width":512,"height":512}}}}}]},"previous":{"fields":{"slug":"/python-zipfile/"},"frontmatter":{"title":"PythonでZIPファイルを操作する - zipfile"}},"next":{"fields":{"slug":"/python-pydoc/"},"frontmatter":{"title":"Pythonでドキュメントを自動生成するモジュール - pydoc"}}},"pageContext":{"id":"b835272d-4cb7-5073-9d95-ff6d18b42266","previousPostId":"6a944458-2521-50f6-b4f2-0ebd2383e164","nextPostId":"e513f506-93fe-5d8a-8b3b-9bc5efa8f5fb","relatedPosts":["/python-secrets/"]}},"staticQueryHashes":["2841359383"],"slicesMap":{}}