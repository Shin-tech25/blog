{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/python-random-choice-choices-sample-shuffle/","result":{"data":{"site":{"siteMetadata":{"title":"Developer's blog"}},"markdownRemark":{"id":"1a0464f6-42f2-5d8c-8973-a66f7f83e975","excerpt":"Python で乱数を扱うには、標準ライブラリの  モジュールを使います。数値の乱数生成はもちろん、シーケンス（リストやタプルなど）からランダムに要素を選びたいときにも役立ちます。本記事では、シーケンス内の要素をランダムに選択・抽出・並び替えするための関数を詳しく見ていきましょう。 1. ：ランダムに…","tableOfContents":"<ul>\n<li>\n<ul>\n<li><a href=\"#1-code-classlanguage-textrandomchoiceseqcode%E3%83%A9%E3%83%B3%E3%83%80%E3%83%A0%E3%81%AB-1-%E8%A6%81%E7%B4%A0%E3%82%92%E9%81%B8%E3%81%B6\">1. <code class=\"language-text\">random.choice(seq)</code>：ランダムに 1 要素を選ぶ</a></li>\n<li><a href=\"#2-code-classlanguage-textrandomchoicesseq-kncode%E9%87%8D%E8%A4%87%E3%82%92%E8%A8%B1%E3%81%97%E3%81%A6%E8%A4%87%E6%95%B0%E8%A6%81%E7%B4%A0%E3%82%92%E9%81%B8%E3%81%B6\">2. <code class=\"language-text\">random.choices(seq, k=n)</code>：重複を許して複数要素を選ぶ</a></li>\n<li><a href=\"#3-code-classlanguage-textrandomsampleseq-kncode%E9%87%8D%E8%A4%87%E3%82%92%E8%A8%B1%E3%81%95%E3%81%9A%E3%81%AB%E8%A4%87%E6%95%B0%E8%A6%81%E7%B4%A0%E3%82%92%E9%81%B8%E3%81%B6\">3. <code class=\"language-text\">random.sample(seq, k=n)</code>：重複を許さずに複数要素を選ぶ</a></li>\n<li><a href=\"#4-code-classlanguage-textrandomshuffleseqcode%E3%83%AA%E3%82%B9%E3%83%88%E3%82%92%E7%A0%B4%E5%A3%8A%E7%9A%84%E3%81%AB%E3%82%B7%E3%83%A3%E3%83%83%E3%83%95%E3%83%AB%E3%81%99%E3%82%8B\">4. <code class=\"language-text\">random.shuffle(seq)</code>：リストを破壊的にシャッフルする</a></li>\n<li><a href=\"#5-%E4%BD%BF%E3%81%84%E5%88%86%E3%81%91%E3%81%AE%E3%83%9D%E3%82%A4%E3%83%B3%E3%83%88\">5. 使い分けのポイント</a></li>\n<li><a href=\"#6-%E3%82%B7%E3%83%BC%E3%83%89%E5%80%A4%E3%81%AB%E3%82%88%E3%82%8B%E5%86%8D%E7%8F%BE%E6%80%A7\">6. シード値による再現性</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\">まとめ</a></p>\n</li>\n</ul>","html":"<p>Python で乱数を扱うには、標準ライブラリの <code class=\"language-text\">random</code> モジュールを使います。数値の乱数生成はもちろん、<strong>シーケンス（リストやタプルなど）からランダムに要素を選びたい</strong>ときにも役立ちます。本記事では、シーケンス内の要素をランダムに選択・抽出・並び替えするための関数を詳しく見ていきましょう。</p>\n<h3 id=\"1-code-classlanguage-textrandomchoiceseqcodeランダムに-1-要素を選ぶ\" style=\"position:relative;\"><a href=\"#1-code-classlanguage-textrandomchoiceseqcode%E3%83%A9%E3%83%B3%E3%83%80%E3%83%A0%E3%81%AB-1-%E8%A6%81%E7%B4%A0%E3%82%92%E9%81%B8%E3%81%B6\" aria-label=\"1 code classlanguage textrandomchoiceseqcodeランダムに 1 要素を選ぶ permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. <code class=\"language-text\">random.choice(seq)</code>：ランダムに 1 要素を選ぶ</h3>\n<ul>\n<li>\n<p><strong>概要</strong><br>\n<code class=\"language-text\">choice()</code> は、与えられたシーケンス（リスト、タプル、文字列など）から、<strong>ランダムに 1 つの要素</strong>を取得します。実行するたびに異なる要素が返される可能性があるのが特徴です。</p>\n</li>\n<li>\n<p><strong>使用例</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> random\n\nnum_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\nrandom_num <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>choice<span class=\"token punctuation\">(</span>num_list<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>random_num<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 実行のたびに1〜5のいずれかが表示される</span></code></pre></div>\n</li>\n<li>\n<p><strong>ポイント</strong></p>\n<ul>\n<li>文字列に対しても利用できます： <code class=\"language-text\">random.choice(\"ABCDE\")</code> → <code class=\"language-text\">'A'</code> 〜 <code class=\"language-text\">'E'</code> のいずれか 1 文字。</li>\n<li>単純に「ランダムでひとつだけ選びたい」というシチュエーションで便利です。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2-code-classlanguage-textrandomchoicesseq-kncode重複を許して複数要素を選ぶ\" style=\"position:relative;\"><a href=\"#2-code-classlanguage-textrandomchoicesseq-kncode%E9%87%8D%E8%A4%87%E3%82%92%E8%A8%B1%E3%81%97%E3%81%A6%E8%A4%87%E6%95%B0%E8%A6%81%E7%B4%A0%E3%82%92%E9%81%B8%E3%81%B6\" aria-label=\"2 code classlanguage textrandomchoicesseq kncode重複を許して複数要素を選ぶ permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. <code class=\"language-text\">random.choices(seq, k=n)</code>：重複を許して複数要素を選ぶ</h3>\n<ul>\n<li>\n<p><strong>概要</strong><br>\n<code class=\"language-text\">choices()</code> は、シーケンスから複数の要素を選択しますが、<strong>同じ要素を何度も選択する可能性がある</strong>「復元抽出」方式です。<code class=\"language-text\">k</code> 引数で取得したい要素の数を指定します。</p>\n</li>\n<li>\n<p><strong>使用例</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> random\n\nnum_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\nrandom_nums <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>choices<span class=\"token punctuation\">(</span>num_list<span class=\"token punctuation\">,</span> k<span class=\"token operator\">=</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>random_nums<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 例: [3, 2, 2, 3, 2, 1] など、要素が重複していてもOK</span></code></pre></div>\n</li>\n<li>\n<p><strong>ポイント</strong></p>\n<ul>\n<li>大量のサンプルが必要なときに便利です。例えばガチャの結果を 10 回連続で取得するなど。</li>\n<li>同じ要素が何度も含まれるかもしれない点に注意が必要です。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"3-code-classlanguage-textrandomsampleseq-kncode重複を許さずに複数要素を選ぶ\" style=\"position:relative;\"><a href=\"#3-code-classlanguage-textrandomsampleseq-kncode%E9%87%8D%E8%A4%87%E3%82%92%E8%A8%B1%E3%81%95%E3%81%9A%E3%81%AB%E8%A4%87%E6%95%B0%E8%A6%81%E7%B4%A0%E3%82%92%E9%81%B8%E3%81%B6\" aria-label=\"3 code classlanguage textrandomsampleseq kncode重複を許さずに複数要素を選ぶ permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. <code class=\"language-text\">random.sample(seq, k=n)</code>：重複を許さずに複数要素を選ぶ</h3>\n<ul>\n<li>\n<p><strong>概要</strong><br>\n<code class=\"language-text\">sample()</code> は、シーケンスから複数の要素を<strong>重複なく</strong>取得する「非復元抽出」を行います。<br>\n<code class=\"language-text\">k</code> 引数で取得したい要素の数を指定し、抽出した要素を要素数 <code class=\"language-text\">k</code> のリストで返します。</p>\n</li>\n<li>\n<p><strong>使用例</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> random\n\nnum_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\nrandom_two <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>sample<span class=\"token punctuation\">(</span>num_list<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>random_two<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 例: [3, 1] など、実行のたびに結果が変わるが重複はしない</span></code></pre></div>\n</li>\n<li>\n<p><strong>すべての要素を一度だけランダムに取得したい場合</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># シーケンスの長さだけ抽出数を指定する</span>\nrandom_all <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>sample<span class=\"token punctuation\">(</span>num_list<span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>num_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>random_all<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 例: [5, 2, 1, 4, 3] など、順番だけがランダムに変わる</span></code></pre></div>\n</li>\n<li>\n<p><strong>ポイント</strong></p>\n<ul>\n<li>同じ要素が 2 度選ばれることはありません。</li>\n<li>ランダムに選んだ要素を漏れなく 1 回だけ使いたいときに便利です。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"4-code-classlanguage-textrandomshuffleseqcodeリストを破壊的にシャッフルする\" style=\"position:relative;\"><a href=\"#4-code-classlanguage-textrandomshuffleseqcode%E3%83%AA%E3%82%B9%E3%83%88%E3%82%92%E7%A0%B4%E5%A3%8A%E7%9A%84%E3%81%AB%E3%82%B7%E3%83%A3%E3%83%83%E3%83%95%E3%83%AB%E3%81%99%E3%82%8B\" aria-label=\"4 code classlanguage textrandomshuffleseqcodeリストを破壊的にシャッフルする permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. <code class=\"language-text\">random.shuffle(seq)</code>：リストを破壊的にシャッフルする</h3>\n<ul>\n<li>\n<p><strong>概要</strong><br>\n<code class=\"language-text\">shuffle()</code> はリストの要素をそのまま並べ替え、順序をランダムに変更します。戻り値は <code class=\"language-text\">None</code> なので、<strong>リストそのものの並び</strong>が変わったと理解しておきましょう。</p>\n</li>\n<li>\n<p><strong>使用例</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> random\n\nnum_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\nrandom<span class=\"token punctuation\">.</span>shuffle<span class=\"token punctuation\">(</span>num_list<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>num_list<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 例: [3, 1, 4, 5, 2] など、元の並びは失われる</span></code></pre></div>\n</li>\n<li>\n<p><strong>ポイント</strong></p>\n<ul>\n<li>タプルや文字列など、イミュータブルなシーケンスには使用できません（リストに変換する必要があります）。</li>\n<li>トランプの山札をシャッフルするなど、「もとの順序が直接ランダムに変わる」イメージが必要なときに便利です。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"5-使い分けのポイント\" style=\"position:relative;\"><a href=\"#5-%E4%BD%BF%E3%81%84%E5%88%86%E3%81%91%E3%81%AE%E3%83%9D%E3%82%A4%E3%83%B3%E3%83%88\" aria-label=\"5 使い分けのポイント permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. 使い分けのポイント</h3>\n<ol>\n<li><strong>1 要素だけランダムに取りたい</strong><br>\n→ <code class=\"language-text\">random.choice()</code></li>\n<li><strong>重複を許しながら複数要素を選びたい</strong><br>\n→ <code class=\"language-text\">random.choices(seq, k=n)</code></li>\n<li><strong>重複を許さずに複数要素を選びたい</strong><br>\n→ <code class=\"language-text\">random.sample(seq, k=n)</code></li>\n<li><strong>シーケンスそのものをランダムな順序に並べ替えたい</strong><br>\n→ <code class=\"language-text\">random.shuffle()</code></li>\n</ol>\n<p><strong>応用</strong>: 「全要素をランダムな順番で取得したい」場合は、<code class=\"language-text\">random.sample(seq, len(seq))</code> を使って、シーケンス全体を並べ替えた新しいリストを作成するか、<code class=\"language-text\">random.shuffle()</code> で元のリスト自体を並べ替える方法があります。</p>\n<h3 id=\"6-シード値による再現性\" style=\"position:relative;\"><a href=\"#6-%E3%82%B7%E3%83%BC%E3%83%89%E5%80%A4%E3%81%AB%E3%82%88%E3%82%8B%E5%86%8D%E7%8F%BE%E6%80%A7\" aria-label=\"6 シード値による再現性 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. シード値による再現性</h3>\n<p>乱数は実行のたびに変わるため、テストやデバッグでは同じ結果が欲しいときがあります。その場合は <code class=\"language-text\">random.seed(任意の整数)</code> を使うと、同じ順序の乱数が得られます。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> random\n\nrandom<span class=\"token punctuation\">.</span>seed<span class=\"token punctuation\">(</span><span class=\"token number\">123</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>random<span class=\"token punctuation\">.</span>choice<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 常に同じ結果に固定される</span></code></pre></div>\n<h2 id=\"まとめ\" style=\"position:relative;\"><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\" aria-label=\"まとめ permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>まとめ</h2>\n<ul>\n<li><code class=\"language-text\">choice()</code>, <code class=\"language-text\">choices()</code>, <code class=\"language-text\">sample()</code>, <code class=\"language-text\">shuffle()</code> を使い分けることで、<strong>ランダムに要素を取り出すあらゆるニーズ</strong>に対応できます。</li>\n<li>ランダムに要素を抽出するときは、「重複を許すか・許さないか」「もとのリストを変更していいか」などの要件をまずはっきりさせましょう。</li>\n<li><strong>大量のデータ生成やゲームの山札、実験データのシャッフルなど、多岐にわたる場面で活躍</strong>します。</li>\n</ul>\n<p>Python でのランダム処理を自在に扱い、柔軟なデータ操作を行いましょう！</p>","frontmatter":{"title":"Pythonのランダム操作：choice, choices, sample, shuffleを徹底解説","date":"2025-01-31","description":"Pythonのrandomモジュールを使って、シーケンスから要素をランダムに選択したり、並び替えたりする方法をわかりやすく紹介。choice, choices, sample, shuffleの使い分けや注意点、シード値による再現性についても詳しく解説します。","tags":["Python","数値計算"],"featuredImage":{"publicURL":"/static/58806ff8f67ddf870a8d9902f47dcd61/python2.jpg","childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/static/58806ff8f67ddf870a8d9902f47dcd61/3c367/python2.jpg","srcSet":"/static/58806ff8f67ddf870a8d9902f47dcd61/19e71/python2.jpg 128w,\n/static/58806ff8f67ddf870a8d9902f47dcd61/68974/python2.jpg 256w,\n/static/58806ff8f67ddf870a8d9902f47dcd61/3c367/python2.jpg 512w","sizes":"(min-width: 512px) 512px, 100vw"},"sources":[{"srcSet":"/static/58806ff8f67ddf870a8d9902f47dcd61/6766a/python2.webp 128w,\n/static/58806ff8f67ddf870a8d9902f47dcd61/22bfc/python2.webp 256w,\n/static/58806ff8f67ddf870a8d9902f47dcd61/d689f/python2.webp 512w","type":"image/webp","sizes":"(min-width: 512px) 512px, 100vw"}]},"width":512,"height":512}}}}},"relatedPosts":{"nodes":[{"fields":{"slug":"/python-secrets/"},"frontmatter":{"title":"Pythonでセキュアな乱数を生成する - secrets","date":"2025-02-09","tags":["Python","セキュリティ","secrets","random"],"description":"Pythonのsecretsモジュールを使って、安全なパスワードやトークンを生成する方法を解説。タイミング攻撃への対策や実用例も詳しく紹介します。","featuredImage":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#181818","images":{"fallback":{"src":"/static/becfdfbe97644644be53ae4b70532f68/3c367/security.jpg","srcSet":"/static/becfdfbe97644644be53ae4b70532f68/19e71/security.jpg 128w,\n/static/becfdfbe97644644be53ae4b70532f68/68974/security.jpg 256w,\n/static/becfdfbe97644644be53ae4b70532f68/3c367/security.jpg 512w","sizes":"(min-width: 512px) 512px, 100vw"},"sources":[{"srcSet":"/static/becfdfbe97644644be53ae4b70532f68/6766a/security.webp 128w,\n/static/becfdfbe97644644be53ae4b70532f68/22bfc/security.webp 256w,\n/static/becfdfbe97644644be53ae4b70532f68/d689f/security.webp 512w","type":"image/webp","sizes":"(min-width: 512px) 512px, 100vw"}]},"width":512,"height":512}}}}}]},"previous":{"fields":{"slug":"/python-decimal-vs-float/"},"frontmatter":{"title":"PythonのdecimalモジュールとFloatOperationトラップを理解する"}},"next":{"fields":{"slug":"/us-stock-market-cap-strategies/"},"frontmatter":{"title":"米国株投資における時価総額別の分類と投資戦略"}}},"pageContext":{"id":"1a0464f6-42f2-5d8c-8973-a66f7f83e975","previousPostId":"b69f44f5-c741-56ee-8800-4422ffdd90ea","nextPostId":"5e842f36-d663-50f9-9263-6c4350b47824","relatedPosts":["/python-secrets/"]}},"staticQueryHashes":["2841359383"],"slicesMap":{}}