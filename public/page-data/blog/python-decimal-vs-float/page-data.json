{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/python-decimal-vs-float/","result":{"data":{"site":{"siteMetadata":{"title":"Developer's blog"}},"markdownRemark":{"id":"b69f44f5-c741-56ee-8800-4422ffdd90ea","excerpt":"Python の decimal モジュールと FloatOperation トラップを理解する 数値計算を行う際、Python の標準的な型は広く使われていますが、丸め誤差が発生することがあります。これは、型が内部的に IEEE 75…","tableOfContents":"<ul>\n<li>\n<p><a href=\"#python-%E3%81%AE-decimal-%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E3%81%A8-floatoperation-%E3%83%88%E3%83%A9%E3%83%83%E3%83%97%E3%82%92%E7%90%86%E8%A7%A3%E3%81%99%E3%82%8B\">Python の decimal モジュールと FloatOperation トラップを理解する</a></p>\n<ul>\n<li>\n<p><a href=\"#1-decimal-%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E3%81%A8%E3%81%AF\">1. decimal モジュールとは？</a></p>\n<ul>\n<li><a href=\"#code-classlanguage-textdecimalcode-%E3%81%AE%E7%89%B9%E5%BE%B4\"><code class=\"language-text\">decimal</code> の特徴</a></li>\n<li><a href=\"#code-classlanguage-textdecimalcode%E3%81%AE%E5%9F%BA%E6%9C%AC%E7%9A%84%E3%81%AA%E4%BD%BF%E3%81%84%E6%96%B9\"><code class=\"language-text\">decimal</code>の基本的な使い方</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#2-decimal-%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E3%81%AE%E6%B4%BB%E7%94%A8%E4%BE%8B\">2. decimal モジュールの活用例</a></p>\n<ul>\n<li><a href=\"#1-%E9%87%91%E8%9E%8D%E8%A8%88%E7%AE%97\">(1) 金融計算</a></li>\n<li><a href=\"#2-%E7%A7%91%E5%AD%A6%E8%A8%88%E7%AE%97\">(2) 科学計算</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#3-float-%E6%B7%B7%E5%9C%A8%E6%99%82%E3%81%AE%E8%AA%A4%E5%B7%AE\">3. float 混在時の誤差</a></p>\n</li>\n<li>\n<p><a href=\"#4-floatoperation-%E3%83%88%E3%83%A9%E3%83%83%E3%83%97%E3%81%AE%E8%A8%AD%E5%AE%9A\">4. FloatOperation トラップの設定</a></p>\n<ul>\n<li><a href=\"#code-classlanguage-textfloatoperationcode%E3%83%88%E3%83%A9%E3%83%83%E3%83%97%E3%81%A8%E3%81%AF\"><code class=\"language-text\">FloatOperation</code>トラップとは？</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#5-%E3%81%BE%E3%81%A8%E3%82%81\">5. まとめ</a></p>\n</li>\n</ul>\n</li>\n</ul>","html":"<h1 id=\"python-の-decimal-モジュールと-floatoperation-トラップを理解する\" style=\"position:relative;\"><a href=\"#python-%E3%81%AE-decimal-%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E3%81%A8-floatoperation-%E3%83%88%E3%83%A9%E3%83%83%E3%83%97%E3%82%92%E7%90%86%E8%A7%A3%E3%81%99%E3%82%8B\" aria-label=\"python の decimal モジュールと floatoperation トラップを理解する permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Python の decimal モジュールと FloatOperation トラップを理解する</h1>\n<p>数値計算を行う際、Python の標準的な<code class=\"language-text\">float</code>型は広く使われていますが、丸め誤差が発生することがあります。これは、<code class=\"language-text\">float</code>型が内部的に IEEE 754 形式の倍精度浮動小数点を使用しているためであり、金融計算や高精度な科学計算において問題となることがあります。</p>\n<p>このような問題を解決するために Python には<code class=\"language-text\">decimal</code>モジュールが用意されており、高精度な 10 進演算が可能です。本記事では、<code class=\"language-text\">decimal</code>モジュールの基本的な使い方から、<code class=\"language-text\">float</code>型との混在による誤差の問題、さらには<code class=\"language-text\">FloatOperation</code>トラップを活用することで<code class=\"language-text\">float</code>との混在を防ぐ方法まで詳しく解説します。</p>\n<h2 id=\"1-decimal-モジュールとは\" style=\"position:relative;\"><a href=\"#1-decimal-%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E3%81%A8%E3%81%AF\" aria-label=\"1 decimal モジュールとは permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. decimal モジュールとは？</h2>\n<p>Python の<code class=\"language-text\">decimal</code>モジュールは、10 進数で高精度の計算を行うための Python 標準ライブラリです。通常の<code class=\"language-text\">float</code>型とは異なり、任意の精度で計算ができ、丸め誤差を抑えることができます。</p>\n<h3 id=\"code-classlanguage-textdecimalcode-の特徴\" style=\"position:relative;\"><a href=\"#code-classlanguage-textdecimalcode-%E3%81%AE%E7%89%B9%E5%BE%B4\" aria-label=\"code classlanguage textdecimalcode の特徴 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">decimal</code> の特徴</h3>\n<ul>\n<li><strong>高精度な計算</strong>（デフォルト 28 桁、任意の精度に変更可能）</li>\n<li><strong>浮動小数点の丸め誤差が少ない</strong></li>\n<li><strong>金融計算など正確な数値処理が必要な場面に適用可能</strong></li>\n<li><strong>カスタマイズ可能な丸めモード</strong></li>\n</ul>\n<h3 id=\"code-classlanguage-textdecimalcodeの基本的な使い方\" style=\"position:relative;\"><a href=\"#code-classlanguage-textdecimalcode%E3%81%AE%E5%9F%BA%E6%9C%AC%E7%9A%84%E3%81%AA%E4%BD%BF%E3%81%84%E6%96%B9\" aria-label=\"code classlanguage textdecimalcodeの基本的な使い方 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">decimal</code>の基本的な使い方</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> decimal <span class=\"token keyword\">import</span> Decimal\n\n<span class=\"token comment\"># Decimalオブジェクトの作成</span>\nx <span class=\"token operator\">=</span> Decimal<span class=\"token punctuation\">(</span><span class=\"token string\">\"0.1\"</span><span class=\"token punctuation\">)</span>\ny <span class=\"token operator\">=</span> Decimal<span class=\"token punctuation\">(</span><span class=\"token string\">\"0.2\"</span><span class=\"token punctuation\">)</span>\nz <span class=\"token operator\">=</span> Decimal<span class=\"token punctuation\">(</span><span class=\"token string\">\"0.3\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 加算</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">+</span> y<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 出力: 0.3</span></code></pre></div>\n<h2 id=\"2-decimal-モジュールの活用例\" style=\"position:relative;\"><a href=\"#2-decimal-%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E3%81%AE%E6%B4%BB%E7%94%A8%E4%BE%8B\" aria-label=\"2 decimal モジュールの活用例 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. decimal モジュールの活用例</h2>\n<h3 id=\"1-金融計算\" style=\"position:relative;\"><a href=\"#1-%E9%87%91%E8%9E%8D%E8%A8%88%E7%AE%97\" aria-label=\"1 金融計算 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(1) 金融計算</h3>\n<p>金融計算では、正確な小数計算が求められるため、<code class=\"language-text\">decimal</code> モジュールを使用するのが一般的です。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> decimal <span class=\"token keyword\">import</span> Decimal<span class=\"token punctuation\">,</span> ROUND_HALF_UP\n\n<span class=\"token comment\"># 金額計算</span>\nprice <span class=\"token operator\">=</span> Decimal<span class=\"token punctuation\">(</span><span class=\"token string\">\"199.99\"</span><span class=\"token punctuation\">)</span>\ntax_rate <span class=\"token operator\">=</span> Decimal<span class=\"token punctuation\">(</span><span class=\"token string\">\"0.08\"</span><span class=\"token punctuation\">)</span>\ntotal <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>price <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">+</span> tax_rate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>quantize<span class=\"token punctuation\">(</span>Decimal<span class=\"token punctuation\">(</span><span class=\"token string\">\"0.01\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> rounding<span class=\"token operator\">=</span>ROUND_HALF_UP<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>total<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 215.99</span></code></pre></div>\n<h3 id=\"2-科学計算\" style=\"position:relative;\"><a href=\"#2-%E7%A7%91%E5%AD%A6%E8%A8%88%E7%AE%97\" aria-label=\"2 科学計算 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(2) 科学計算</h3>\n<p>科学計算においても、精度を維持するために <code class=\"language-text\">decimal</code> が活用されます。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> decimal <span class=\"token keyword\">import</span> Decimal<span class=\"token punctuation\">,</span> getcontext\n\n<span class=\"token comment\"># 精度を50桁に設定</span>\ngetcontext<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>prec <span class=\"token operator\">=</span> <span class=\"token number\">50</span>\n\nx <span class=\"token operator\">=</span> Decimal<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> Decimal<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 高精度な計算結果</span></code></pre></div>\n<h2 id=\"3-float-混在時の誤差\" style=\"position:relative;\"><a href=\"#3-float-%E6%B7%B7%E5%9C%A8%E6%99%82%E3%81%AE%E8%AA%A4%E5%B7%AE\" aria-label=\"3 float 混在時の誤差 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. float 混在時の誤差</h2>\n<p>Python の標準<code class=\"language-text\">float</code>型では、丸め誤差が発生する可能性があります。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span> <span class=\"token operator\">+</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 出力: 0.30000000000000004</span></code></pre></div>\n<p>これに対して、<code class=\"language-text\">decimal</code>を使用すると正確な計算が可能です。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> decimal <span class=\"token keyword\">import</span> Decimal\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>Decimal<span class=\"token punctuation\">(</span><span class=\"token string\">\"0.1\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> Decimal<span class=\"token punctuation\">(</span><span class=\"token string\">\"0.2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 出力: 0.3</span></code></pre></div>\n<h2 id=\"4-floatoperation-トラップの設定\" style=\"position:relative;\"><a href=\"#4-floatoperation-%E3%83%88%E3%83%A9%E3%83%83%E3%83%97%E3%81%AE%E8%A8%AD%E5%AE%9A\" aria-label=\"4 floatoperation トラップの設定 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. FloatOperation トラップの設定</h2>\n<h3 id=\"code-classlanguage-textfloatoperationcodeトラップとは\" style=\"position:relative;\"><a href=\"#code-classlanguage-textfloatoperationcode%E3%83%88%E3%83%A9%E3%83%83%E3%83%97%E3%81%A8%E3%81%AF\" aria-label=\"code classlanguage textfloatoperationcodeトラップとは permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">FloatOperation</code>トラップとは？</h3>\n<p><code class=\"language-text\">Decimal</code>型と<code class=\"language-text\">float</code>型の混在を防ぐために、<code class=\"language-text\">FloatOperation</code>トラップを有効にすることができます。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> decimal <span class=\"token keyword\">import</span> Decimal<span class=\"token punctuation\">,</span> getcontext<span class=\"token punctuation\">,</span> FloatOperation\n\n<span class=\"token comment\"># コンテキストを取得</span>\ncontext <span class=\"token operator\">=</span> getcontext<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># FloatOperation トラップを有効化</span>\ncontext<span class=\"token punctuation\">.</span>traps<span class=\"token punctuation\">[</span>FloatOperation<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n\n<span class=\"token comment\"># float を使うとエラー</span>\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n    result <span class=\"token operator\">=</span> Decimal<span class=\"token punctuation\">(</span><span class=\"token string\">\"1.1\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1.1</span>  <span class=\"token comment\"># float との演算</span>\n<span class=\"token keyword\">except</span> FloatOperation<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"FloatOperation トラップが発生しました\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"5-まとめ\" style=\"position:relative;\"><a href=\"#5-%E3%81%BE%E3%81%A8%E3%82%81\" aria-label=\"5 まとめ permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. まとめ</h2>\n<ul>\n<li><code class=\"language-text\">decimal</code>モジュールは高精度な計算を可能にする。</li>\n<li><code class=\"language-text\">decimal</code>を使うと<code class=\"language-text\">float</code>型の丸め誤差を回避できる。</li>\n<li><code class=\"language-text\">FloatOperation</code>トラップを有効にすると、<code class=\"language-text\">float</code>と<code class=\"language-text\">Decimal</code>の混在を防げる。</li>\n<li><code class=\"language-text\">decimal</code>は金融計算や科学計算など、精度が求められる場面で活用される。</li>\n</ul>\n<p>Python で正確な数値計算を行いたい場合は、<code class=\"language-text\">decimal</code>モジュールを積極的に活用しましょう！</p>","frontmatter":{"title":"PythonのdecimalモジュールとFloatOperationトラップを理解する","date":"2025-01-30","description":"Pythonのdecimalモジュールの基本から、float混在による誤差の問題、FloatOperationトラップの活用方法まで詳しく解説します。金融計算や科学計算におけるdecimalの有用性を理解しましょう。","tags":["Python","数値計算"],"featuredImage":{"publicURL":"/static/58806ff8f67ddf870a8d9902f47dcd61/python2.jpg","childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/static/58806ff8f67ddf870a8d9902f47dcd61/3c367/python2.jpg","srcSet":"/static/58806ff8f67ddf870a8d9902f47dcd61/19e71/python2.jpg 128w,\n/static/58806ff8f67ddf870a8d9902f47dcd61/68974/python2.jpg 256w,\n/static/58806ff8f67ddf870a8d9902f47dcd61/3c367/python2.jpg 512w","sizes":"(min-width: 512px) 512px, 100vw"},"sources":[{"srcSet":"/static/58806ff8f67ddf870a8d9902f47dcd61/6766a/python2.webp 128w,\n/static/58806ff8f67ddf870a8d9902f47dcd61/22bfc/python2.webp 256w,\n/static/58806ff8f67ddf870a8d9902f47dcd61/d689f/python2.webp 512w","type":"image/webp","sizes":"(min-width: 512px) 512px, 100vw"}]},"width":512,"height":512}}}}},"relatedPosts":{"nodes":[]},"previous":{"fields":{"slug":"/python-temporary-data-storage/"},"frontmatter":{"title":"Pythonによる一時データ保存のベストプラクティス"}},"next":{"fields":{"slug":"/python-random-choice-choices-sample-shuffle/"},"frontmatter":{"title":"Pythonのランダム操作：choice, choices, sample, shuffleを徹底解説"}}},"pageContext":{"id":"b69f44f5-c741-56ee-8800-4422ffdd90ea","previousPostId":"92b54d11-8dd6-57ed-9568-4ea55a829567","nextPostId":"1a0464f6-42f2-5d8c-8973-a66f7f83e975","relatedPosts":[]}},"staticQueryHashes":["2841359383"],"slicesMap":{}}