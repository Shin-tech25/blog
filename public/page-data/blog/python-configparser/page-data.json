{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/python-configparser/","result":{"data":{"site":{"siteMetadata":{"title":"Developer's blog"}},"markdownRemark":{"id":"12b8faec-2926-5f41-a174-047e95d88b1a","excerpt":"1. INI ファイルとは INI ファイル は、Windows OS…","tableOfContents":"<ul>\n<li>\n<p><a href=\"#1-ini-%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%A8%E3%81%AF\">1. INI ファイルとは</a></p>\n</li>\n<li>\n<p><a href=\"#2-code-classlanguage-textconfigparsercode-%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E3%81%AE%E6%A6%82%E8%A6%81\">2. <code class=\"language-text\">configparser</code> モジュールの概要</a></p>\n</li>\n<li>\n<p><a href=\"#3-ini-%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E8%AA%AD%E3%81%BF%E8%BE%BC%E3%82%80\">3. INI ファイルを読み込む</a></p>\n<ul>\n<li><a href=\"#31-%E5%9F%BA%E6%9C%AC%E7%9A%84%E3%81%AA%E8%AA%AD%E3%81%BF%E8%BE%BC%E3%81%BF\">3.1 基本的な読み込み</a></li>\n<li><a href=\"#32-code-classlanguage-textdefaultcode-%E3%82%BB%E3%82%AF%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%AE%E6%89%B1%E3%81%84\">3.2 <code class=\"language-text\">DEFAULT</code> セクションの扱い</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#4-ini-%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%B8%E3%81%AE%E6%9B%B8%E3%81%8D%E8%BE%BC%E3%81%BF\">4. INI ファイルへの書き込み</a></p>\n</li>\n<li>\n<p><a href=\"#5-%E5%80%A4%E3%81%AE%E8%A3%9C%E9%96%93%E6%A9%9F%E8%83%BDinterpolation\">5. 値の補間機能（Interpolation）</a></p>\n<ul>\n<li><a href=\"#51-basicinterpolation\">5.1 BasicInterpolation</a></li>\n<li><a href=\"#52-extendedinterpolation\">5.2 ExtendedInterpolation</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#6-%E3%82%88%E3%81%8F%E3%81%82%E3%82%8B%E3%82%A8%E3%83%A9%E3%83%BC%E3%81%A8%E5%AF%BE%E5%87%A6%E6%B3%95\">6. よくあるエラーと対処法</a></p>\n<ul>\n<li>\n<p><a href=\"#61-%E3%82%AA%E3%83%97%E3%82%B7%E3%83%A7%E3%83%B3%E3%82%84%E3%82%BB%E3%82%AF%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%AE%E5%AD%98%E5%9C%A8%E3%81%97%E3%81%AA%E3%81%84%E5%A0%B4%E5%90%88\">6.1 オプションやセクションの存在しない場合</a></p>\n</li>\n<li>\n<p><a href=\"#62-%E5%9E%8B%E5%A4%89%E6%8F%9B%E3%81%AE%E6%B3%A8%E6%84%8F%E7%82%B9\">6.2 型変換の注意点</a></p>\n<ul>\n<li><a href=\"#ini-%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AE%E5%80%A4%E3%81%AF%E5%9F%BA%E6%9C%AC%E7%9A%84%E3%81%AB%E6%96%87%E5%AD%97%E5%88%97\">INI ファイルの値は基本的に文字列</a></li>\n<li><a href=\"#%E6%95%B0%E5%80%A4%E3%81%AB%E5%A4%89%E6%8F%9B%E3%81%99%E3%82%8B%E5%A0%B4%E5%90%88\">数値に変換する場合</a></li>\n<li><a href=\"#%E7%9C%9F%E5%81%BD%E5%80%A4boolean%E3%81%AB%E5%A4%89%E6%8F%9B%E3%81%99%E3%82%8B%E5%A0%B4%E5%90%88\">真偽値（Boolean）に変換する場合</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#63-%E8%A3%9C%E9%96%93%E3%82%A8%E3%83%A9%E3%83%BC\">6.3 補間エラー</a></p>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#7-%E3%81%BE%E3%81%A8%E3%82%81\">7. まとめ</a></p>\n<ul>\n<li><a href=\"#%E5%8F%82%E8%80%83%E3%83%AA%E3%83%B3%E3%82%AF\">参考リンク</a></li>\n</ul>\n</li>\n</ul>","html":"<h2 id=\"1-ini-ファイルとは\" style=\"position:relative;\"><a href=\"#1-ini-%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%A8%E3%81%AF\" aria-label=\"1 ini ファイルとは permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. INI ファイルとは</h2>\n<p><strong>INI ファイル</strong> は、Windows OS で古くから使われている設定ファイル形式です。テキスト形式で構成され、以下のように <strong>セクション</strong> と <strong>オプション</strong>（キーと値のペア）から構成される点が特徴です。</p>\n<div class=\"gatsby-highlight\" data-language=\"ini\"><pre class=\"language-ini\"><code class=\"language-ini\"><span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">DEFAULT</span><span class=\"token punctuation\">]</span></span>\n<span class=\"token key attr-name\">home_dir</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">/home/user</span>\n<span class=\"token key attr-name\">limit</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">100</span>\n\n<span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">USER_A</span><span class=\"token punctuation\">]</span></span>\n<span class=\"token key attr-name\">group</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">Viewer</span>\n<span class=\"token key attr-name\">active</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">true</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">[DEFAULT]</code> はデフォルト設定を定義するセクションで、他のセクションで値が指定されない場合に適用されます。</li>\n<li><code class=\"language-text\">[USER_A]</code> や <code class=\"language-text\">[USER_B]</code> のようにセクション名を指定し、その下にオプションと値を記述します。</li>\n</ul>\n<p>Windows 以外の環境でも、INI は分かりやすい構造を持つため、設定ファイルやアプリケーションのコンフィグ管理に利用されることがあります。</p>\n<h2 id=\"2-code-classlanguage-textconfigparsercode-モジュールの概要\" style=\"position:relative;\"><a href=\"#2-code-classlanguage-textconfigparsercode-%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E3%81%AE%E6%A6%82%E8%A6%81\" aria-label=\"2 code classlanguage textconfigparsercode モジュールの概要 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. <code class=\"language-text\">configparser</code> モジュールの概要</h2>\n<p>Python では、<code class=\"language-text\">configparser</code> モジュールを使うことで INI ファイルの読み書きを簡単に行えます。</p>\n<ul>\n<li><strong>INI ファイルを読み込む</strong>: ファイル内のセクションやオプションを Python のオブジェクトとして扱える</li>\n<li><strong>INI ファイルへ書き込む</strong>: Python のオブジェクトを INI ファイル形式で保存できる</li>\n<li><strong>値の補間機能（Interpolation）</strong>: 別のセクションやオプションの値を参照しながら設定を上書きする機能を提供</li>\n</ul>\n<h2 id=\"3-ini-ファイルを読み込む\" style=\"position:relative;\"><a href=\"#3-ini-%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E8%AA%AD%E3%81%BF%E8%BE%BC%E3%82%80\" aria-label=\"3 ini ファイルを読み込む permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. INI ファイルを読み込む</h2>\n<h3 id=\"31-基本的な読み込み\" style=\"position:relative;\"><a href=\"#31-%E5%9F%BA%E6%9C%AC%E7%9A%84%E3%81%AA%E8%AA%AD%E3%81%BF%E8%BE%BC%E3%81%BF\" aria-label=\"31 基本的な読み込み permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.1 基本的な読み込み</h3>\n<p>まずは、最もシンプルな読み込み方法を見てみましょう。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> configparser\n\n<span class=\"token comment\"># ConfigParserインスタンスを生成</span>\nconfig <span class=\"token operator\">=</span> configparser<span class=\"token punctuation\">.</span>ConfigParser<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># INIファイルを読み込む</span>\nconfig<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token string\">\"config.ini\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># セクション名を一覧表示</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>sections<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># セクション[USER_A]のオプション値を取得</span>\nuser_a_group <span class=\"token operator\">=</span> config<span class=\"token punctuation\">[</span><span class=\"token string\">\"USER_A\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"group\"</span><span class=\"token punctuation\">]</span>\nuser_a_active <span class=\"token operator\">=</span> config<span class=\"token punctuation\">.</span>getboolean<span class=\"token punctuation\">(</span><span class=\"token string\">\"USER_A\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"active\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>user_a_group<span class=\"token punctuation\">)</span>   <span class=\"token comment\"># 例: 'Viewer'</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>user_a_active<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 例: True</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">config = configparser.ConfigParser()</code> で <code class=\"language-text\">ConfigParser</code> クラスのインスタンスを作成します。</li>\n<li><code class=\"language-text\">config.read(\"config.ini\")</code> で指定した INI ファイルを読み込みます。</li>\n<li><code class=\"language-text\">config.sections()</code> を使うと、<code class=\"language-text\">[DEFAULT]</code> を除いたセクション名のリストを取得できます。</li>\n<li><code class=\"language-text\">config[\"USER_A\"][\"group\"]</code> のように辞書感覚で値を取得できますが、型はすべて文字列です。</li>\n<li>真偽値を取得したい場合は、<code class=\"language-text\">config.getboolean(section, option)</code> のように型に合わせたメソッドを使うと便利です。</li>\n</ul>\n<h3 id=\"32-code-classlanguage-textdefaultcode-セクションの扱い\" style=\"position:relative;\"><a href=\"#32-code-classlanguage-textdefaultcode-%E3%82%BB%E3%82%AF%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%AE%E6%89%B1%E3%81%84\" aria-label=\"32 code classlanguage textdefaultcode セクションの扱い permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.2 <code class=\"language-text\">DEFAULT</code> セクションの扱い</h3>\n<p>INI ファイルに <code class=\"language-text\">[DEFAULT]</code> セクションがある場合、他のセクションから参照されます。以下のように <code class=\"language-text\">[USER_A]</code> セクションで指定されていないオプションは、<code class=\"language-text\">DEFAULT</code> セクションの値が適用されます。</p>\n<div class=\"gatsby-highlight\" data-language=\"ini\"><pre class=\"language-ini\"><code class=\"language-ini\"><span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">DEFAULT</span><span class=\"token punctuation\">]</span></span>\n<span class=\"token key attr-name\">home_dir</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">/home/default</span>\n<span class=\"token key attr-name\">limit</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">200</span>\n\n<span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">USER_A</span><span class=\"token punctuation\">]</span></span>\n<span class=\"token key attr-name\">group</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">Viewer</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> configparser\n\nconfig <span class=\"token operator\">=</span> configparser<span class=\"token punctuation\">.</span>ConfigParser<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nconfig<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token string\">\"config.ini\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">[</span><span class=\"token string\">\"USER_A\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"home_dir\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># /home/default (DEFAULTの値が適用される)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">[</span><span class=\"token string\">\"USER_A\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"limit\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\"># 200 (DEFAULTの値が適用される)</span></code></pre></div>\n<h2 id=\"4-ini-ファイルへの書き込み\" style=\"position:relative;\"><a href=\"#4-ini-%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%B8%E3%81%AE%E6%9B%B8%E3%81%8D%E8%BE%BC%E3%81%BF\" aria-label=\"4 ini ファイルへの書き込み permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. INI ファイルへの書き込み</h2>\n<p>INI ファイルへ設定を保存するときは、<code class=\"language-text\">config.write()</code> を使います。たとえば、以下の例では新しいセクションやオプションを追加してからファイルに書き込みます。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> configparser\n\nconfig <span class=\"token operator\">=</span> configparser<span class=\"token punctuation\">.</span>ConfigParser<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># セクション追加</span>\nconfig<span class=\"token punctuation\">[</span><span class=\"token string\">\"DEFAULT\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"app_name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"SampleApp\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"debug_mode\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"false\"</span>\n<span class=\"token punctuation\">}</span>\n\nconfig<span class=\"token punctuation\">[</span><span class=\"token string\">\"USER_A\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"group\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Developer\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"mail\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"user_a@example.com\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\"># ファイルへ書き込み</span>\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"output.ini\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"w\"</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    config<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span></code></pre></div>\n<p>書き込み後の <code class=\"language-text\">output.ini</code> は、次のような形式になります。</p>\n<div class=\"gatsby-highlight\" data-language=\"ini\"><pre class=\"language-ini\"><code class=\"language-ini\"><span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">DEFAULT</span><span class=\"token punctuation\">]</span></span>\n<span class=\"token key attr-name\">app_name</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">SampleApp</span>\n<span class=\"token key attr-name\">debug_mode</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">false</span>\n\n<span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">USER_A</span><span class=\"token punctuation\">]</span></span>\n<span class=\"token key attr-name\">group</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">Developer</span>\n<span class=\"token key attr-name\">mail</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">user_a@example.com</span></code></pre></div>\n<h2 id=\"5-値の補間機能interpolation\" style=\"position:relative;\"><a href=\"#5-%E5%80%A4%E3%81%AE%E8%A3%9C%E9%96%93%E6%A9%9F%E8%83%BDinterpolation\" aria-label=\"5 値の補間機能interpolation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. 値の補間機能（Interpolation）</h2>\n<p><code class=\"language-text\">configparser</code> は、INI ファイルの値を他の値で補間（置き換え）する機能を持っています。補間を利用すると、以下のように別のセクション・オプションの値を参照して設定を動的に作ることができます。</p>\n<h3 id=\"51-basicinterpolation\" style=\"position:relative;\"><a href=\"#51-basicinterpolation\" aria-label=\"51 basicinterpolation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5.1 BasicInterpolation</h3>\n<p>デフォルトの補間方法は <code class=\"language-text\">BasicInterpolation</code> です。たとえば、<code class=\"language-text\">%(option_name)s</code> と書くと、同じセクションや <code class=\"language-text\">DEFAULT</code> セクションから値を探して置き換えてくれます。</p>\n<div class=\"gatsby-highlight\" data-language=\"ini\"><pre class=\"language-ini\"><code class=\"language-ini\"><span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">DEFAULT</span><span class=\"token punctuation\">]</span></span>\n<span class=\"token key attr-name\">base_dir</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">/var/app</span>\n\n<span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">USER_B</span><span class=\"token punctuation\">]</span></span>\n<span class=\"token key attr-name\">data_dir</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">%(base_dir)s/data</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> configparser\n\nconfig <span class=\"token operator\">=</span> configparser<span class=\"token punctuation\">.</span>ConfigParser<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># デフォルトでBasicInterpolation</span>\nconfig<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token string\">\"config_basic.ini\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">[</span><span class=\"token string\">\"USER_B\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"data_dir\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># /var/app/data</span></code></pre></div>\n<h3 id=\"52-extendedinterpolation\" style=\"position:relative;\"><a href=\"#52-extendedinterpolation\" aria-label=\"52 extendedinterpolation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5.2 ExtendedInterpolation</h3>\n<p><code class=\"language-text\">ExtendedInterpolation</code> を使うと、<code class=\"language-text\">[セクション名].オプション名</code> の形式でより明示的な補間が可能です。</p>\n<div class=\"gatsby-highlight\" data-language=\"ini\"><pre class=\"language-ini\"><code class=\"language-ini\"><span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">USER_A</span><span class=\"token punctuation\">]</span></span>\n<span class=\"token key attr-name\">home_dir</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">/home/a_user</span>\n<span class=\"token key attr-name\">mail</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">a_user@example.com</span>\n\n<span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">USER_B</span><span class=\"token punctuation\">]</span></span>\n<span class=\"token key attr-name\">inherit</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">${USER_A.home_dir}</span>\n<span class=\"token key attr-name\">user_info</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">${USER_A.mail}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> configparser\n\nconfig <span class=\"token operator\">=</span> configparser<span class=\"token punctuation\">.</span>ConfigParser<span class=\"token punctuation\">(</span>interpolation<span class=\"token operator\">=</span>configparser<span class=\"token punctuation\">.</span>ExtendedInterpolation<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nconfig<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token string\">\"config_extend.ini\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">[</span><span class=\"token string\">\"USER_B\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"inherit\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\"># /home/a_user</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">[</span><span class=\"token string\">\"USER_B\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"user_info\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># a_user@example.com</span></code></pre></div>\n<h2 id=\"6-よくあるエラーと対処法\" style=\"position:relative;\"><a href=\"#6-%E3%82%88%E3%81%8F%E3%81%82%E3%82%8B%E3%82%A8%E3%83%A9%E3%83%BC%E3%81%A8%E5%AF%BE%E5%87%A6%E6%B3%95\" aria-label=\"6 よくあるエラーと対処法 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. よくあるエラーと対処法</h2>\n<h3 id=\"61-オプションやセクションの存在しない場合\" style=\"position:relative;\"><a href=\"#61-%E3%82%AA%E3%83%97%E3%82%B7%E3%83%A7%E3%83%B3%E3%82%84%E3%82%BB%E3%82%AF%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%AE%E5%AD%98%E5%9C%A8%E3%81%97%E3%81%AA%E3%81%84%E5%A0%B4%E5%90%88\" aria-label=\"61 オプションやセクションの存在しない場合 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6.1 オプションやセクションの存在しない場合</h3>\n<p>存在しないセクションやオプションを参照すると、<code class=\"language-text\">KeyError</code> や <code class=\"language-text\">NoOptionError</code> が発生します。これを回避するには、<code class=\"language-text\">config.has_section()</code> や <code class=\"language-text\">config.has_option()</code> で事前に確認するか、<code class=\"language-text\">config.get()</code> にデフォルト値を指定する方法があります。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">if</span> config<span class=\"token punctuation\">.</span>has_section<span class=\"token punctuation\">(</span><span class=\"token string\">\"USER_C\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    user_c_group <span class=\"token operator\">=</span> config<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"USER_C\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"group\"</span><span class=\"token punctuation\">,</span> fallback<span class=\"token operator\">=</span><span class=\"token string\">\"Guest\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"62-型変換の注意点\" style=\"position:relative;\"><a href=\"#62-%E5%9E%8B%E5%A4%89%E6%8F%9B%E3%81%AE%E6%B3%A8%E6%84%8F%E7%82%B9\" aria-label=\"62 型変換の注意点 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6.2 型変換の注意点</h3>\n<h4 id=\"ini-ファイルの値は基本的に文字列\" style=\"position:relative;\"><a href=\"#ini-%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AE%E5%80%A4%E3%81%AF%E5%9F%BA%E6%9C%AC%E7%9A%84%E3%81%AB%E6%96%87%E5%AD%97%E5%88%97\" aria-label=\"ini ファイルの値は基本的に文字列 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>INI ファイルの値は基本的に文字列</h4>\n<p><code class=\"language-text\">configparser</code> で INI ファイルを読み込むと、全てのオプションの値は文字列として扱われます。</p>\n<p>例えば、設定ファイルに</p>\n<div class=\"gatsby-highlight\" data-language=\"ini\"><pre class=\"language-ini\"><code class=\"language-ini\"><span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">DEFAULT</span><span class=\"token punctuation\">]</span></span>\n<span class=\"token key attr-name\">limit</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">100</span></code></pre></div>\n<p>と記述されていても、</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">limit_val <span class=\"token operator\">=</span> config<span class=\"token punctuation\">[</span><span class=\"token string\">\"DEFAULT\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"limit\"</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p>で取得した場合、<code class=\"language-text\">limit_val</code> は <code class=\"language-text\">\"100\"</code> という文字列になります。</p>\n<h4 id=\"数値に変換する場合\" style=\"position:relative;\"><a href=\"#%E6%95%B0%E5%80%A4%E3%81%AB%E5%A4%89%E6%8F%9B%E3%81%99%E3%82%8B%E5%A0%B4%E5%90%88\" aria-label=\"数値に変換する場合 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>数値に変換する場合</h4>\n<p>計算や数値的な比較を行いたいときは、取得した文字列を整数や浮動小数点数に変換する必要があります。</p>\n<p><code class=\"language-text\">config.getint()</code> や <code class=\"language-text\">config.getfloat()</code> を使うと、INI ファイル内の数値文字列を自動で変換してくれます。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">limit_val <span class=\"token operator\">=</span> config<span class=\"token punctuation\">.</span>getint<span class=\"token punctuation\">(</span><span class=\"token string\">\"DEFAULT\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"limit\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><strong>注意点:</strong></p>\n<p>もし設定値に余計な空白や数字以外の文字が含まれている場合、変換処理で <code class=\"language-text\">ValueError</code> が発生する可能性があるため、設定ファイル側での記述ルールを統一しておくことが大切です。</p>\n<h4 id=\"真偽値booleanに変換する場合\" style=\"position:relative;\"><a href=\"#%E7%9C%9F%E5%81%BD%E5%80%A4boolean%E3%81%AB%E5%A4%89%E6%8F%9B%E3%81%99%E3%82%8B%E5%A0%B4%E5%90%88\" aria-label=\"真偽値booleanに変換する場合 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>真偽値（Boolean）に変換する場合</h4>\n<p>真偽値として扱いたい場合、<code class=\"language-text\">config.getboolean()</code> を利用します。これにより、文字列が自動的に論理値に変換されます。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">active <span class=\"token operator\">=</span> config<span class=\"token punctuation\">.</span>getboolean<span class=\"token punctuation\">(</span><span class=\"token string\">\"USER_A\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"active\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><strong>認識される文字列:</strong></p>\n<p><code class=\"language-text\">getboolean()</code> は、以下の文字列表現を標準でサポートしています（大文字・小文字は区別されません）:</p>\n<ul>\n<li><strong>True として認識:</strong> <code class=\"language-text\">\"1\"</code>, <code class=\"language-text\">\"yes\"</code>, <code class=\"language-text\">\"true\"</code>, <code class=\"language-text\">\"on\"</code></li>\n<li><strong>False として認識:</strong> <code class=\"language-text\">\"0\"</code>, <code class=\"language-text\">\"no\"</code>, <code class=\"language-text\">\"false\"</code>, <code class=\"language-text\">\"off\"</code></li>\n</ul>\n<p><strong>注意点:</strong></p>\n<p>これ以外の表現（たとえば <code class=\"language-text\">\"enabled\"</code> や <code class=\"language-text\">\"True!\"</code> など）はサポートされておらず、変換に失敗する可能性があります。設定ファイルを書く際は、必ずこれらの標準的な表現に従うことが求められます。</p>\n<h3 id=\"63-補間エラー\" style=\"position:relative;\"><a href=\"#63-%E8%A3%9C%E9%96%93%E3%82%A8%E3%83%A9%E3%83%BC\" aria-label=\"63 補間エラー permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6.3 補間エラー</h3>\n<p>補間（Interpolation）を使うときに、存在しないキーを参照していると <code class=\"language-text\">InterpolationMissingOptionError</code> が発生します。補間を使わない場合は、<code class=\"language-text\">interpolation=None</code> を指定して機能を無効にすることも可能です。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">config <span class=\"token operator\">=</span> configparser<span class=\"token punctuation\">.</span>ConfigParser<span class=\"token punctuation\">(</span>interpolation<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"7-まとめ\" style=\"position:relative;\"><a href=\"#7-%E3%81%BE%E3%81%A8%E3%82%81\" aria-label=\"7 まとめ permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7. まとめ</h2>\n<ul>\n<li><strong>INI ファイル</strong> はセクションとオプション（キー＝値）で構成されるシンプルな設定ファイル形式で、Windows 以外の環境でも幅広く利用されています。</li>\n<li><strong><code class=\"language-text\">configparser</code> モジュール</strong> を使うと、INI ファイルの読み書きや補間（Interpolation）機能を簡単に扱えます。</li>\n<li><code class=\"language-text\">DEFAULT</code> セクションで共通の設定を管理したり、<strong>BasicInterpolation</strong> や <strong>ExtendedInterpolation</strong> を使って値を柔軟に参照したりできるため、大規模な設定管理にも対応可能です。</li>\n<li>データ型の変換や補間エラーなどの注意点を把握しておけば、設定ファイルの整合性を保ちつつ、読みやすくメンテナンスしやすいアプリケーションを開発できます。</li>\n</ul>\n<p>INI ファイルは JSON よりも人間にとって読みやすい場合も多く、特にアプリケーションの設定やユーザーカスタマイズを管理するのに適したフォーマットです。Python の <code class=\"language-text\">configparser</code> を活用して、アプリケーション開発や運用の効率化を図ってみてください。</p>\n<h3 id=\"参考リンク\" style=\"position:relative;\"><a href=\"#%E5%8F%82%E8%80%83%E3%83%AA%E3%83%B3%E3%82%AF\" aria-label=\"参考リンク permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>参考リンク</h3>\n<ul>\n<li><a href=\"https://docs.python.org/3/library/configparser.html\">公式ドキュメント: configparser — Configuration file parser</a></li>\n<li><a href=\"https://ja.wikipedia.org/wiki/INI%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB\">INI ファイルの形式 (Wikipedia)</a></li>\n</ul>","frontmatter":{"title":"Pythonによる設定管理 - configparser","date":"2025-03-01","description":"INIファイルの基本構造や特徴、Pythonのconfigparserモジュールを使った設定管理の方法について、具体的なコード例と共に分かりやすく解説します。","tags":["Python","INI","configparser","設定管理","技術記事"],"featuredImage":{"publicURL":"/static/07758e24f5d5bc9c6a17cc7722c80477/python3.jpg","childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#282828","images":{"fallback":{"src":"/static/07758e24f5d5bc9c6a17cc7722c80477/3c367/python3.jpg","srcSet":"/static/07758e24f5d5bc9c6a17cc7722c80477/19e71/python3.jpg 128w,\n/static/07758e24f5d5bc9c6a17cc7722c80477/68974/python3.jpg 256w,\n/static/07758e24f5d5bc9c6a17cc7722c80477/3c367/python3.jpg 512w","sizes":"(min-width: 512px) 512px, 100vw"},"sources":[{"srcSet":"/static/07758e24f5d5bc9c6a17cc7722c80477/6766a/python3.webp 128w,\n/static/07758e24f5d5bc9c6a17cc7722c80477/22bfc/python3.webp 256w,\n/static/07758e24f5d5bc9c6a17cc7722c80477/d689f/python3.webp 512w","type":"image/webp","sizes":"(min-width: 512px) 512px, 100vw"}]},"width":512,"height":512}}}}},"relatedPosts":{"nodes":[{"fields":{"slug":"/python-pyyaml/"},"frontmatter":{"title":"Pythonで始めるYAML入門：PyYAMLで読み書きする方法","date":"2025-03-02","tags":["Python","YAML","PyYAML","設定管理"],"description":"この記事では、YAMLの基本概念と、PyYAMLライブラリを使ったYAMLファイルの読み書き方法、さらにセキュリティ上の注意点について具体例を交えて分かりやすく解説します。","featuredImage":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#282828","images":{"fallback":{"src":"/static/07758e24f5d5bc9c6a17cc7722c80477/3c367/python3.jpg","srcSet":"/static/07758e24f5d5bc9c6a17cc7722c80477/19e71/python3.jpg 128w,\n/static/07758e24f5d5bc9c6a17cc7722c80477/68974/python3.jpg 256w,\n/static/07758e24f5d5bc9c6a17cc7722c80477/3c367/python3.jpg 512w","sizes":"(min-width: 512px) 512px, 100vw"},"sources":[{"srcSet":"/static/07758e24f5d5bc9c6a17cc7722c80477/6766a/python3.webp 128w,\n/static/07758e24f5d5bc9c6a17cc7722c80477/22bfc/python3.webp 256w,\n/static/07758e24f5d5bc9c6a17cc7722c80477/d689f/python3.webp 512w","type":"image/webp","sizes":"(min-width: 512px) 512px, 100vw"}]},"width":512,"height":512}}}}}]},"previous":{"fields":{"slug":"/python-json1/"},"frontmatter":{"title":"Pythonで始めるJSON入門：基本からファイル操作、Web API活用まで"}},"next":{"fields":{"slug":"/python-pyyaml/"},"frontmatter":{"title":"Pythonで始めるYAML入門：PyYAMLで読み書きする方法"}}},"pageContext":{"id":"12b8faec-2926-5f41-a174-047e95d88b1a","previousPostId":"8aa80dd6-8386-5f3c-a56b-f695f3a3b259","nextPostId":"471ab2c2-01cb-5cb3-ac1c-8b5b76b0d416","relatedPosts":["/python-pyyaml/"]}},"staticQueryHashes":["2841359383"],"slicesMap":{}}