{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/python-secrets/","result":{"data":{"site":{"siteMetadata":{"title":"Developer's blog"}},"markdownRemark":{"id":"56f85b2b-0352-5e94-baf1-00ffc8c15742","excerpt":"Python には、セキュアな乱数生成をサポートする標準ライブラリ  があります。このモジュールは、暗号学的に安全な乱数を生成するために設計されており、パスワードやトークンなどの機密情報を扱う際に推奨されます。本記事では、 モジュールの基本的な使い方から応用例までを解説します。…","tableOfContents":"<ul>\n<li>\n<p><a href=\"#1-%E6%A6%82%E8%A6%81\">1. 概要</a></p>\n<ul>\n<li><a href=\"#code-classlanguage-textrandomcode-%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E3%81%A8%E3%81%AE%E9%81%95%E3%81%84\"><code class=\"language-text\">random</code> モジュールとの違い</a></li>\n<li><a href=\"#%E4%B8%BB%E3%81%AA%E7%94%A8%E9%80%94\">主な用途</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#2-%E3%83%91%E3%82%B9%E3%83%AF%E3%83%BC%E3%83%89%E3%82%92%E7%94%9F%E6%88%90%E3%81%99%E3%82%8B\">2. パスワードを生成する</a></p>\n<ul>\n<li>\n<p><a href=\"#%E5%9F%BA%E6%9C%AC%E7%9A%84%E3%81%AA%E3%83%91%E3%82%B9%E3%83%AF%E3%83%BC%E3%83%89%E7%94%9F%E6%88%90\">基本的なパスワード生成</a></p>\n<ul>\n<li><a href=\"#%E4%BD%BF%E7%94%A8%E4%BE%8B\">使用例</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%E6%9D%A1%E4%BB%B6%E4%BB%98%E3%81%8D%E3%83%91%E3%82%B9%E3%83%AF%E3%83%BC%E3%83%89%E7%94%9F%E6%88%90\">条件付きパスワード生成</a></p>\n<ul>\n<li><a href=\"#%E4%BD%BF%E7%94%A8%E4%BE%8B-1\">使用例</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#3-%E3%83%88%E3%83%BC%E3%82%AF%E3%83%B3%E3%82%92%E7%94%9F%E6%88%90%E3%81%99%E3%82%8B\">3. トークンを生成する</a></p>\n<ul>\n<li>\n<p><a href=\"#%E3%83%88%E3%83%BC%E3%82%AF%E3%83%B3%E7%94%9F%E6%88%90%E3%81%AE%E6%A6%82%E8%A6%81\">トークン生成の概要</a></p>\n</li>\n<li>\n<p><a href=\"#%E3%83%88%E3%83%BC%E3%82%AF%E3%83%B3%E7%94%9F%E6%88%90%E3%81%AE%E4%BE%8B\">トークン生成の例</a></p>\n<ul>\n<li><a href=\"#%E4%BD%BF%E7%94%A8%E4%BE%8B-2\">使用例</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%E3%83%88%E3%83%BC%E3%82%AF%E3%83%B3%E3%82%B5%E3%82%A4%E3%82%BA%E3%81%AE%E8%80%83%E6%85%AE\">トークンサイズの考慮</a></p>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#4-%E3%83%88%E3%83%BC%E3%82%AF%E3%83%B3%E3%81%AE%E6%AF%94%E8%BC%83\">4. トークンの比較</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"#%E4%BD%BF%E7%94%A8%E4%BE%8B-3\">使用例</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#5-%E5%AE%9F%E7%94%A8%E4%BE%8B\">5. 実用例</a></p>\n<ul>\n<li>\n<p><a href=\"#%E3%83%AF%E3%83%B3%E3%82%BF%E3%82%A4%E3%83%A0%E3%83%91%E3%82%B9%E3%83%AF%E3%83%BC%E3%83%89%E3%81%AE%E7%94%9F%E6%88%90\">ワンタイムパスワードの生成</a></p>\n<ul>\n<li><a href=\"#%E4%BD%BF%E7%94%A8%E4%BE%8B-4\">使用例</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%E5%AE%89%E5%85%A8%E3%81%AA-url-%E3%81%AE%E7%94%9F%E6%88%90\">安全な URL の生成</a></p>\n<ul>\n<li><a href=\"#%E4%BD%BF%E7%94%A8%E4%BE%8B-5\">使用例</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#6-%E7%B5%90%E8%AB%96\">6. 結論</a></p>\n</li>\n</ul>","html":"<p>Python には、セキュアな乱数生成をサポートする標準ライブラリ <code class=\"language-text\">secrets</code> があります。このモジュールは、暗号学的に安全な乱数を生成するために設計されており、パスワードやトークンなどの機密情報を扱う際に推奨されます。本記事では、<code class=\"language-text\">secrets</code> モジュールの基本的な使い方から応用例までを解説します。</p>\n<h2 id=\"1-概要\" style=\"position:relative;\"><a href=\"#1-%E6%A6%82%E8%A6%81\" aria-label=\"1 概要 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 概要</h2>\n<h3 id=\"code-classlanguage-textrandomcode-モジュールとの違い\" style=\"position:relative;\"><a href=\"#code-classlanguage-textrandomcode-%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E3%81%A8%E3%81%AE%E9%81%95%E3%81%84\" aria-label=\"code classlanguage textrandomcode モジュールとの違い permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">random</code> モジュールとの違い</h3>\n<p>Python の乱数生成には <code class=\"language-text\">random</code> モジュールもありますが、これは暗号学的なセキュリティが必要ない場合（例: シミュレーションや統計計算）に適しています。一方で、<code class=\"language-text\">secrets</code> は機密性が必要な場合（例: パスワード生成やトークン生成）に使用されます。</p>\n<h3 id=\"主な用途\" style=\"position:relative;\"><a href=\"#%E4%B8%BB%E3%81%AA%E7%94%A8%E9%80%94\" aria-label=\"主な用途 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>主な用途</h3>\n<ul>\n<li>安全なパスワード生成</li>\n<li>認証トークンの生成</li>\n<li>URL などに埋め込む推測困難なキーの生成</li>\n</ul>\n<p><code class=\"language-text\">secrets</code> モジュールを利用することで、ブルートフォース攻撃やタイミング攻撃といったセキュリティリスクを軽減できます。</p>\n<h2 id=\"2-パスワードを生成する\" style=\"position:relative;\"><a href=\"#2-%E3%83%91%E3%82%B9%E3%83%AF%E3%83%BC%E3%83%89%E3%82%92%E7%94%9F%E6%88%90%E3%81%99%E3%82%8B\" aria-label=\"2 パスワードを生成する permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. パスワードを生成する</h2>\n<h3 id=\"基本的なパスワード生成\" style=\"position:relative;\"><a href=\"#%E5%9F%BA%E6%9C%AC%E7%9A%84%E3%81%AA%E3%83%91%E3%82%B9%E3%83%AF%E3%83%BC%E3%83%89%E7%94%9F%E6%88%90\" aria-label=\"基本的なパスワード生成 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>基本的なパスワード生成</h3>\n<p>文字列からランダムに選択された文字を組み合わせてパスワードを生成するには、<code class=\"language-text\">secrets.choice()</code> を使用します。</p>\n<h4 id=\"使用例\" style=\"position:relative;\"><a href=\"#%E4%BD%BF%E7%94%A8%E4%BE%8B\" aria-label=\"使用例 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>使用例</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> secrets\n<span class=\"token keyword\">import</span> string\n\n<span class=\"token comment\"># アルファベットと数字を含む文字セット</span>\nalpha_num <span class=\"token operator\">=</span> string<span class=\"token punctuation\">.</span>ascii_letters <span class=\"token operator\">+</span> string<span class=\"token punctuation\">.</span>digits\n\n<span class=\"token comment\"># 8文字のランダムなパスワードを生成</span>\npassword <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>secrets<span class=\"token punctuation\">.</span>choice<span class=\"token punctuation\">(</span>alpha_num<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>password<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 例: 'Ab1Cd2Ef'</span></code></pre></div>\n<p><code class=\"language-text\">string</code> モジュールを使うことで、アルファベットや数字、特殊文字を簡単に指定できます。</p>\n<h3 id=\"条件付きパスワード生成\" style=\"position:relative;\"><a href=\"#%E6%9D%A1%E4%BB%B6%E4%BB%98%E3%81%8D%E3%83%91%E3%82%B9%E3%83%AF%E3%83%BC%E3%83%89%E7%94%9F%E6%88%90\" aria-label=\"条件付きパスワード生成 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>条件付きパスワード生成</h3>\n<p>アルファベット、数字、特殊文字をすべて含むパスワードを生成するには、以下のような方法を取ります。</p>\n<h4 id=\"使用例-1\" style=\"position:relative;\"><a href=\"#%E4%BD%BF%E7%94%A8%E4%BE%8B-1\" aria-label=\"使用例 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>使用例</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> secrets\n<span class=\"token keyword\">import</span> string\n\n<span class=\"token comment\"># 使用する文字セット</span>\nspecial_chars <span class=\"token operator\">=</span> <span class=\"token string\">'!@#$%^&amp;*'</span>\npwd_chars <span class=\"token operator\">=</span> string<span class=\"token punctuation\">.</span>ascii_letters <span class=\"token operator\">+</span> string<span class=\"token punctuation\">.</span>digits <span class=\"token operator\">+</span> special_chars\n\n<span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n    password <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>secrets<span class=\"token punctuation\">.</span>choice<span class=\"token punctuation\">(</span>pwd_chars<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># 必須条件を満たしているか確認</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">(</span>c <span class=\"token keyword\">in</span> string<span class=\"token punctuation\">.</span>ascii_letters <span class=\"token keyword\">for</span> c <span class=\"token keyword\">in</span> password<span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span>\n        <span class=\"token builtin\">any</span><span class=\"token punctuation\">(</span>c <span class=\"token keyword\">in</span> string<span class=\"token punctuation\">.</span>digits <span class=\"token keyword\">for</span> c <span class=\"token keyword\">in</span> password<span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span>\n        <span class=\"token builtin\">any</span><span class=\"token punctuation\">(</span>c <span class=\"token keyword\">in</span> special_chars <span class=\"token keyword\">for</span> c <span class=\"token keyword\">in</span> password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">break</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>password<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 例: 'A1@d3$FgH'</span></code></pre></div>\n<p>この方法により、条件を満たした安全なパスワードを生成できます。</p>\n<h2 id=\"3-トークンを生成する\" style=\"position:relative;\"><a href=\"#3-%E3%83%88%E3%83%BC%E3%82%AF%E3%83%B3%E3%82%92%E7%94%9F%E6%88%90%E3%81%99%E3%82%8B\" aria-label=\"3 トークンを生成する permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. トークンを生成する</h2>\n<h3 id=\"トークン生成の概要\" style=\"position:relative;\"><a href=\"#%E3%83%88%E3%83%BC%E3%82%AF%E3%83%B3%E7%94%9F%E6%88%90%E3%81%AE%E6%A6%82%E8%A6%81\" aria-label=\"トークン生成の概要 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>トークン生成の概要</h3>\n<p><code class=\"language-text\">secrets</code> モジュールは、以下の関数を使ってトークンを生成します：</p>\n<ul>\n<li><code class=\"language-text\">secrets.token_bytes(n=None)</code>：ランダムなバイト列を生成</li>\n<li><code class=\"language-text\">secrets.token_hex(n=None)</code>：ランダムな 16 進数文字列を生成</li>\n<li><code class=\"language-text\">secrets.token_urlsafe(n=None)</code>：URL セーフな Base64 エンコード文字列を生成</li>\n</ul>\n<h3 id=\"トークン生成の例\" style=\"position:relative;\"><a href=\"#%E3%83%88%E3%83%BC%E3%82%AF%E3%83%B3%E7%94%9F%E6%88%90%E3%81%AE%E4%BE%8B\" aria-label=\"トークン生成の例 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>トークン生成の例</h3>\n<h4 id=\"使用例-2\" style=\"position:relative;\"><a href=\"#%E4%BD%BF%E7%94%A8%E4%BE%8B-2\" aria-label=\"使用例 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>使用例</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> secrets\n\n<span class=\"token comment\"># ランダムなバイト列を生成</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>secrets<span class=\"token punctuation\">.</span>token_bytes<span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 例: b'\\x1f\\x8b\\xe3...'</span>\n\n<span class=\"token comment\"># ランダムな16進数文字列を生成</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>secrets<span class=\"token punctuation\">.</span>token_hex<span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 例: '1f8be37f...'</span>\n\n<span class=\"token comment\"># URLセーフなBase64エンコード文字列を生成</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>secrets<span class=\"token punctuation\">.</span>token_urlsafe<span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 例: '7Fhc3Qx...'</span></code></pre></div>\n<h3 id=\"トークンサイズの考慮\" style=\"position:relative;\"><a href=\"#%E3%83%88%E3%83%BC%E3%82%AF%E3%83%B3%E3%82%B5%E3%82%A4%E3%82%BA%E3%81%AE%E8%80%83%E6%85%AE\" aria-label=\"トークンサイズの考慮 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>トークンサイズの考慮</h3>\n<p>トークンサイズはセキュリティに影響します。小さいサイズは推測を容易にするため、利用シーンに応じて十分な長さを指定してください。デフォルトのトークンサイズは、一般的な用途において十分な安全性を提供します。</p>\n<h2 id=\"4-トークンの比較\" style=\"position:relative;\"><a href=\"#4-%E3%83%88%E3%83%BC%E3%82%AF%E3%83%B3%E3%81%AE%E6%AF%94%E8%BC%83\" aria-label=\"4 トークンの比較 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. トークンの比較</h2>\n<p>生成したトークンを検証する際は、<code class=\"language-text\">secrets.compare_digest()</code> を使用します。これは、タイミング攻撃を防ぐために設計されています。</p>\n<h4 id=\"使用例-3\" style=\"position:relative;\"><a href=\"#%E4%BD%BF%E7%94%A8%E4%BE%8B-3\" aria-label=\"使用例 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>使用例</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> secrets\n<span class=\"token keyword\">from</span> urllib <span class=\"token keyword\">import</span> parse\n\n<span class=\"token comment\"># トークンを生成</span>\nreset_token <span class=\"token operator\">=</span> secrets<span class=\"token punctuation\">.</span>token_urlsafe<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># URLにトークンを埋め込む</span>\nurl <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'https://example.com/?reset=</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>reset_token<span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span>\n\n<span class=\"token comment\"># URLからトークンをパース</span>\nparsed_url <span class=\"token operator\">=</span> parse<span class=\"token punctuation\">.</span>urlparse<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span>\nquery_params <span class=\"token operator\">=</span> parse<span class=\"token punctuation\">.</span>parse_qs<span class=\"token punctuation\">(</span>parsed_url<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">)</span>\nreceived_token <span class=\"token operator\">=</span> query_params<span class=\"token punctuation\">[</span><span class=\"token string\">'reset'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># トークンを比較</span>\n<span class=\"token keyword\">if</span> secrets<span class=\"token punctuation\">.</span>compare_digest<span class=\"token punctuation\">(</span>reset_token<span class=\"token punctuation\">,</span> received_token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"トークンが一致しました\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"トークンが一致しません\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-text\">compare_digest()</code> を使用することで、比較処理が同じ時間で行われ、タイミング攻撃のリスクを軽減できます。</p>\n<h2 id=\"5-実用例\" style=\"position:relative;\"><a href=\"#5-%E5%AE%9F%E7%94%A8%E4%BE%8B\" aria-label=\"5 実用例 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. 実用例</h2>\n<h3 id=\"ワンタイムパスワードの生成\" style=\"position:relative;\"><a href=\"#%E3%83%AF%E3%83%B3%E3%82%BF%E3%82%A4%E3%83%A0%E3%83%91%E3%82%B9%E3%83%AF%E3%83%BC%E3%83%89%E3%81%AE%E7%94%9F%E6%88%90\" aria-label=\"ワンタイムパスワードの生成 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ワンタイムパスワードの生成</h3>\n<p>ワンタイムパスワード（OTP）の生成に <code class=\"language-text\">secrets</code> モジュールを活用できます。</p>\n<h4 id=\"使用例-4\" style=\"position:relative;\"><a href=\"#%E4%BD%BF%E7%94%A8%E4%BE%8B-4\" aria-label=\"使用例 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>使用例</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> secrets\n\n<span class=\"token comment\"># 6桁のワンタイムパスワードを生成</span>\notp <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>secrets<span class=\"token punctuation\">.</span>randbelow<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>otp<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 例: '837295'</span></code></pre></div>\n<h3 id=\"安全な-url-の生成\" style=\"position:relative;\"><a href=\"#%E5%AE%89%E5%85%A8%E3%81%AA-url-%E3%81%AE%E7%94%9F%E6%88%90\" aria-label=\"安全な url の生成 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>安全な URL の生成</h3>\n<p>認証 URL や一時的なリンクの生成にも役立ちます。</p>\n<h4 id=\"使用例-5\" style=\"position:relative;\"><a href=\"#%E4%BD%BF%E7%94%A8%E4%BE%8B-5\" aria-label=\"使用例 5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>使用例</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> secrets\n\n<span class=\"token comment\"># ランダムなキーを含むURLを生成</span>\nkey <span class=\"token operator\">=</span> secrets<span class=\"token punctuation\">.</span>token_urlsafe<span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span>\nurl <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'https://example.com/reset?key=</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>key<span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 例: 'https://example.com/reset?key=7Fhc3Qx...'</span></code></pre></div>\n<h2 id=\"6-結論\" style=\"position:relative;\"><a href=\"#6-%E7%B5%90%E8%AB%96\" aria-label=\"6 結論 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. 結論</h2>\n<p><code class=\"language-text\">secrets</code> モジュールは、暗号学的に安全な乱数を生成するための強力なツールです。パスワードやトークンの生成、機密性が求められるシステムでの使用が推奨されます。本記事で紹介した基本的な使い方や応用例を参考に、セキュリティの高い Python プログラムを構築してください！</p>","frontmatter":{"title":"Pythonでセキュアな乱数を生成する - secrets","date":"2025-02-09","description":"Pythonのsecretsモジュールを使って、安全なパスワードやトークンを生成する方法を解説。タイミング攻撃への対策や実用例も詳しく紹介します。","tags":["Python","セキュリティ","secrets","random"],"featuredImage":{"publicURL":"/static/becfdfbe97644644be53ae4b70532f68/security.jpg","childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#181818","images":{"fallback":{"src":"/static/becfdfbe97644644be53ae4b70532f68/3c367/security.jpg","srcSet":"/static/becfdfbe97644644be53ae4b70532f68/19e71/security.jpg 128w,\n/static/becfdfbe97644644be53ae4b70532f68/68974/security.jpg 256w,\n/static/becfdfbe97644644be53ae4b70532f68/3c367/security.jpg 512w","sizes":"(min-width: 512px) 512px, 100vw"},"sources":[{"srcSet":"/static/becfdfbe97644644be53ae4b70532f68/6766a/security.webp 128w,\n/static/becfdfbe97644644be53ae4b70532f68/22bfc/security.webp 256w,\n/static/becfdfbe97644644be53ae4b70532f68/d689f/security.webp 512w","type":"image/webp","sizes":"(min-width: 512px) 512px, 100vw"}]},"width":512,"height":512}}}}},"relatedPosts":{"nodes":[{"fields":{"slug":"/python-hashlib/"},"frontmatter":{"title":"Pythonでハッシュ値を生成する方法 - hashlib","date":"2025-02-11","tags":["Python","hashlib","暗号化","セキュリティ"],"description":"Python標準ライブラリのhashlibモジュールを使用して、ハッシュ値の生成、暗号化、セキュリティ強化の方法を詳しく解説します。SHA-256やMD5を含むアルゴリズムの使い分けや、ファイルのチェックサム計算、鍵導出処理の実例も紹介。","featuredImage":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#181818","images":{"fallback":{"src":"/static/becfdfbe97644644be53ae4b70532f68/3c367/security.jpg","srcSet":"/static/becfdfbe97644644be53ae4b70532f68/19e71/security.jpg 128w,\n/static/becfdfbe97644644be53ae4b70532f68/68974/security.jpg 256w,\n/static/becfdfbe97644644be53ae4b70532f68/3c367/security.jpg 512w","sizes":"(min-width: 512px) 512px, 100vw"},"sources":[{"srcSet":"/static/becfdfbe97644644be53ae4b70532f68/6766a/security.webp 128w,\n/static/becfdfbe97644644be53ae4b70532f68/22bfc/security.webp 256w,\n/static/becfdfbe97644644be53ae4b70532f68/d689f/security.webp 512w","type":"image/webp","sizes":"(min-width: 512px) 512px, 100vw"}]},"width":512,"height":512}}}}},{"fields":{"slug":"/python-random-choice-choices-sample-shuffle/"},"frontmatter":{"title":"Pythonのランダム操作：choice, choices, sample, shuffleを徹底解説","date":"2025-01-31","tags":["Python","数値計算"],"description":"Pythonのrandomモジュールを使って、シーケンスから要素をランダムに選択したり、並び替えたりする方法をわかりやすく紹介。choice, choices, sample, shuffleの使い分けや注意点、シード値による再現性についても詳しく解説します。","featuredImage":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/static/58806ff8f67ddf870a8d9902f47dcd61/3c367/python2.jpg","srcSet":"/static/58806ff8f67ddf870a8d9902f47dcd61/19e71/python2.jpg 128w,\n/static/58806ff8f67ddf870a8d9902f47dcd61/68974/python2.jpg 256w,\n/static/58806ff8f67ddf870a8d9902f47dcd61/3c367/python2.jpg 512w","sizes":"(min-width: 512px) 512px, 100vw"},"sources":[{"srcSet":"/static/58806ff8f67ddf870a8d9902f47dcd61/6766a/python2.webp 128w,\n/static/58806ff8f67ddf870a8d9902f47dcd61/22bfc/python2.webp 256w,\n/static/58806ff8f67ddf870a8d9902f47dcd61/d689f/python2.webp 512w","type":"image/webp","sizes":"(min-width: 512px) 512px, 100vw"}]},"width":512,"height":512}}}}}]},"previous":{"fields":{"slug":"/python-gzip/"},"frontmatter":{"title":"Pythonでgzipファイルを扱う - gzip"}},"next":{"fields":{"slug":"/python-tarfile/"},"frontmatter":{"title":"Pythonでtarファイルを扱う - tarfile"}}},"pageContext":{"id":"56f85b2b-0352-5e94-baf1-00ffc8c15742","previousPostId":"2388317c-7df0-5dd4-b224-9d1beb08c579","nextPostId":"ac3b01ab-695e-5f73-9f26-ade670037d19","relatedPosts":["/python-random-choice-choices-sample-shuffle/","/python-hashlib/"]}},"staticQueryHashes":["2841359383"],"slicesMap":{}}