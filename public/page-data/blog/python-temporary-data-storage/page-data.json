{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/python-temporary-data-storage/","result":{"data":{"site":{"siteMetadata":{"title":"Developer's blog"}},"markdownRemark":{"id":"92b54d11-8dd6-57ed-9568-4ea55a829567","excerpt":"データを一時的に保存する場面は、ファイル操作やデータ処理を行うエンジニアにとって頻繁に直面する課題です。Python は、こうしたニーズに対応するための便利なモジュールを複数提供しています。この記事では、Python…","tableOfContents":"<ul>\n<li>\n<p><a href=\"#1-%E4%B8%80%E6%99%82%E3%83%87%E3%83%BC%E3%82%BF%E4%BF%9D%E5%AD%98%E3%81%AE%E9%81%B8%E6%8A%9E%E8%82%A2\">1. 一時データ保存の選択肢</a></p>\n<ul>\n<li><a href=\"#11-%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E3%81%AB%E4%BF%9D%E5%AD%98%E3%81%99%E3%82%8B%E5%A0%B4%E5%90%88\"><strong>1.1 ファイルシステムに保存する場合</strong></a></li>\n<li><a href=\"#12-%E3%83%A1%E3%83%A2%E3%83%AA%E3%81%AB%E4%BF%9D%E5%AD%98%E3%81%99%E3%82%8B%E5%A0%B4%E5%90%88\"><strong>1.2 メモリに保存する場合</strong></a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#2-%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E3%81%AB%E4%B8%80%E6%99%82%E3%83%87%E3%83%BC%E3%82%BF%E3%82%92%E4%BF%9D%E5%AD%98-code-classlanguage-texttempfilecode\">2. ファイルシステムに一時データを保存: <code class=\"language-text\">tempfile</code></a></p>\n<ul>\n<li>\n<p><a href=\"#21-code-classlanguage-texttempfilecode-%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E3%81%AE%E6%A6%82%E8%A6%81\"><strong>2.1 <code class=\"language-text\">tempfile</code> モジュールの概要</strong></a></p>\n</li>\n<li>\n<p><a href=\"#22-%E4%B8%BB%E3%81%AA%E9%96%A2%E6%95%B0%E3%81%A8%E4%BD%BF%E3%81%84%E6%96%B9\"><strong>2.2 主な関数と使い方</strong></a></p>\n<ul>\n<li><a href=\"#code-classlanguage-texttempfiletemporaryfilecode\"><strong><code class=\"language-text\">tempfile.TemporaryFile()</code></strong></a></li>\n<li><a href=\"#code-classlanguage-texttempfilenamedtemporaryfilecode\"><strong><code class=\"language-text\">tempfile.NamedTemporaryFile()</code></strong></a></li>\n<li><a href=\"#code-classlanguage-texttempfiletemporarydirectorycode\"><strong><code class=\"language-text\">tempfile.TemporaryDirectory()</code></strong></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#3-%E3%83%A1%E3%83%A2%E3%83%AA%E3%81%AB%E4%B8%80%E6%99%82%E3%83%87%E3%83%BC%E3%82%BF%E3%82%92%E4%BF%9D%E5%AD%98-code-classlanguage-textiobytesiocode-%E3%81%A8-code-classlanguage-textiostringiocode\">3. メモリに一時データを保存: <code class=\"language-text\">io.BytesIO</code> と <code class=\"language-text\">io.StringIO</code></a></p>\n<ul>\n<li>\n<p><a href=\"#31-code-classlanguage-textbytesiocode-%E3%81%A8-code-classlanguage-textstringiocode-%E3%81%AE%E6%A6%82%E8%A6%81\"><strong>3.1 <code class=\"language-text\">BytesIO</code> と <code class=\"language-text\">StringIO</code> の概要</strong></a></p>\n</li>\n<li>\n<p><a href=\"#32-%E4%B8%BB%E3%81%AA%E4%BD%BF%E3%81%84%E6%96%B9\"><strong>3.2 主な使い方</strong></a></p>\n<ul>\n<li><a href=\"#code-classlanguage-textiobytesiocode-%E3%81%AE%E4%BD%BF%E7%94%A8%E4%BE%8B\"><strong><code class=\"language-text\">io.BytesIO</code> の使用例</strong></a></li>\n<li><a href=\"#code-classlanguage-textiostringiocode-%E3%81%AE%E4%BD%BF%E7%94%A8%E4%BE%8B\"><strong><code class=\"language-text\">io.StringIO</code> の使用例</strong></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#4-%E3%83%99%E3%82%B9%E3%83%88%E3%83%97%E3%83%A9%E3%82%AF%E3%83%86%E3%82%A3%E3%82%B9%E3%81%A8%E4%BD%BF%E3%81%84%E5%88%86%E3%81%91\">4. ベストプラクティスと使い分け</a></p>\n<ul>\n<li><a href=\"#41-%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0-vs-%E3%83%A1%E3%83%A2%E3%83%AA\"><strong>4.1 ファイルシステム vs メモリ</strong></a></li>\n<li><a href=\"#42-%E3%81%9D%E3%81%AE%E4%BB%96%E3%81%AE%E6%B3%A8%E6%84%8F%E7%82%B9\"><strong>4.2 その他の注意点</strong></a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#5-%E3%81%BE%E3%81%A8%E3%82%81\">5. まとめ</a></p>\n</li>\n</ul>","html":"<p>データを一時的に保存する場面は、ファイル操作やデータ処理を行うエンジニアにとって頻繁に直面する課題です。Python は、こうしたニーズに対応するための便利なモジュールを複数提供しています。この記事では、<strong>Python でデータを一時的に保存するためのツール</strong>を、以下の観点で整理・解説します。</p>\n<ol>\n<li><strong>ファイルシステムに保存する場合</strong></li>\n<li><strong>メモリに保存する場合</strong></li>\n<li><strong>具体例とベストプラクティス</strong></li>\n</ol>\n<p>初心者から上級者まで、日常の開発で役立つ知見を提供します。</p>\n<h2 id=\"1-一時データ保存の選択肢\" style=\"position:relative;\"><a href=\"#1-%E4%B8%80%E6%99%82%E3%83%87%E3%83%BC%E3%82%BF%E4%BF%9D%E5%AD%98%E3%81%AE%E9%81%B8%E6%8A%9E%E8%82%A2\" aria-label=\"1 一時データ保存の選択肢 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 一時データ保存の選択肢</h2>\n<p>一時的にデータを保存する際の選択肢は、大きく以下の 2 つに分類されます。</p>\n<h3 id=\"11-ファイルシステムに保存する場合\" style=\"position:relative;\"><a href=\"#11-%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E3%81%AB%E4%BF%9D%E5%AD%98%E3%81%99%E3%82%8B%E5%A0%B4%E5%90%88\" aria-label=\"11 ファイルシステムに保存する場合 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>1.1 ファイルシステムに保存する場合</strong></h3>\n<ul>\n<li><strong>用途</strong>:\n<ul>\n<li>大量のデータを保存する必要がある場合</li>\n<li>他のプログラムやプロセスとデータを共有する必要がある場合</li>\n</ul>\n</li>\n<li><strong>使用モジュール</strong>:\n<ul>\n<li><code class=\"language-text\">tempfile</code></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"12-メモリに保存する場合\" style=\"position:relative;\"><a href=\"#12-%E3%83%A1%E3%83%A2%E3%83%AA%E3%81%AB%E4%BF%9D%E5%AD%98%E3%81%99%E3%82%8B%E5%A0%B4%E5%90%88\" aria-label=\"12 メモリに保存する場合 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>1.2 メモリに保存する場合</strong></h3>\n<ul>\n<li><strong>用途</strong>:\n<ul>\n<li>データが少量で、保存が一時的な場合</li>\n<li>高速な読み書きが求められる場合</li>\n</ul>\n</li>\n<li><strong>使用モジュール</strong>:\n<ul>\n<li><code class=\"language-text\">io.BytesIO</code>（バイナリデータ向け）</li>\n<li><code class=\"language-text\">io.StringIO</code>（文字列データ向け）</li>\n</ul>\n</li>\n</ul>\n<p>以下で、それぞれのモジュールについて詳しく見ていきます。</p>\n<h2 id=\"2-ファイルシステムに一時データを保存-code-classlanguage-texttempfilecode\" style=\"position:relative;\"><a href=\"#2-%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E3%81%AB%E4%B8%80%E6%99%82%E3%83%87%E3%83%BC%E3%82%BF%E3%82%92%E4%BF%9D%E5%AD%98-code-classlanguage-texttempfilecode\" aria-label=\"2 ファイルシステムに一時データを保存 code classlanguage texttempfilecode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. ファイルシステムに一時データを保存: <code class=\"language-text\">tempfile</code></h2>\n<h3 id=\"21-code-classlanguage-texttempfilecode-モジュールの概要\" style=\"position:relative;\"><a href=\"#21-code-classlanguage-texttempfilecode-%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E3%81%AE%E6%A6%82%E8%A6%81\" aria-label=\"21 code classlanguage texttempfilecode モジュールの概要 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>2.1 <code class=\"language-text\">tempfile</code> モジュールの概要</strong></h3>\n<p><code class=\"language-text\">tempfile</code> モジュールは、<strong>一時ファイルや一時ディレクトリを安全かつ効率的に管理する</strong>ためのツールを提供します。このモジュールの特徴は次の通りです：</p>\n<ul>\n<li><strong>セキュリティ</strong>: 一時ファイルは自動的に安全なパスに作成されます。</li>\n<li><strong>自動削除</strong>: <code class=\"language-text\">with</code> 文を使用することで、スコープを抜けた際に自動でファイルやディレクトリが削除されます。</li>\n<li><strong>クロスプラットフォーム対応</strong>: Windows、Linux、macOS で一貫した動作をします。</li>\n</ul>\n<h3 id=\"22-主な関数と使い方\" style=\"position:relative;\"><a href=\"#22-%E4%B8%BB%E3%81%AA%E9%96%A2%E6%95%B0%E3%81%A8%E4%BD%BF%E3%81%84%E6%96%B9\" aria-label=\"22 主な関数と使い方 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>2.2 主な関数と使い方</strong></h3>\n<h4 id=\"code-classlanguage-texttempfiletemporaryfilecode\" style=\"position:relative;\"><a href=\"#code-classlanguage-texttempfiletemporaryfilecode\" aria-label=\"code classlanguage texttempfiletemporaryfilecode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong><code class=\"language-text\">tempfile.TemporaryFile()</code></strong></h4>\n<p>匿名の一時ファイルを作成します。このファイルはファイルシステムに存在しますが、名前を持たず、<code class=\"language-text\">with</code> ブロックを抜けると自動的に削除されます。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> tempfile\n\n<span class=\"token keyword\">with</span> tempfile<span class=\"token punctuation\">.</span>TemporaryFile<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">b\"Temporary data\"</span><span class=\"token punctuation\">)</span>\n    f<span class=\"token punctuation\">.</span>seek<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># b\"Temporary data\"</span>\n<span class=\"token comment\"># `with` を抜けるとファイルは削除される</span></code></pre></div>\n<h4 id=\"code-classlanguage-texttempfilenamedtemporaryfilecode\" style=\"position:relative;\"><a href=\"#code-classlanguage-texttempfilenamedtemporaryfilecode\" aria-label=\"code classlanguage texttempfilenamedtemporaryfilecode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong><code class=\"language-text\">tempfile.NamedTemporaryFile()</code></strong></h4>\n<p>名前付きの一時ファイルを作成します。他のプログラムやプロセスがファイルにアクセスする必要がある場合に便利です。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> tempfile\n\n<span class=\"token keyword\">with</span> tempfile<span class=\"token punctuation\">.</span>NamedTemporaryFile<span class=\"token punctuation\">(</span>delete<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># ファイルパスを取得可能</span>\n    f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">b\"Temporary named file\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># `with` を抜けるとファイルは削除される</span></code></pre></div>\n<h4 id=\"code-classlanguage-texttempfiletemporarydirectorycode\" style=\"position:relative;\"><a href=\"#code-classlanguage-texttempfiletemporarydirectorycode\" aria-label=\"code classlanguage texttempfiletemporarydirectorycode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong><code class=\"language-text\">tempfile.TemporaryDirectory()</code></strong></h4>\n<p>一時的なディレクトリを作成します。このディレクトリは、<code class=\"language-text\">with</code> 文を抜けると再帰的に削除されます。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> tempfile\n\n<span class=\"token keyword\">with</span> tempfile<span class=\"token punctuation\">.</span>TemporaryDirectory<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> tmpdir<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Temporary directory:\"</span><span class=\"token punctuation\">,</span> tmpdir<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># ディレクトリとその中のすべてのファイルが削除される</span></code></pre></div>\n<h2 id=\"3-メモリに一時データを保存-code-classlanguage-textiobytesiocode-と-code-classlanguage-textiostringiocode\" style=\"position:relative;\"><a href=\"#3-%E3%83%A1%E3%83%A2%E3%83%AA%E3%81%AB%E4%B8%80%E6%99%82%E3%83%87%E3%83%BC%E3%82%BF%E3%82%92%E4%BF%9D%E5%AD%98-code-classlanguage-textiobytesiocode-%E3%81%A8-code-classlanguage-textiostringiocode\" aria-label=\"3 メモリに一時データを保存 code classlanguage textiobytesiocode と code classlanguage textiostringiocode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. メモリに一時データを保存: <code class=\"language-text\">io.BytesIO</code> と <code class=\"language-text\">io.StringIO</code></h2>\n<h3 id=\"31-code-classlanguage-textbytesiocode-と-code-classlanguage-textstringiocode-の概要\" style=\"position:relative;\"><a href=\"#31-code-classlanguage-textbytesiocode-%E3%81%A8-code-classlanguage-textstringiocode-%E3%81%AE%E6%A6%82%E8%A6%81\" aria-label=\"31 code classlanguage textbytesiocode と code classlanguage textstringiocode の概要 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>3.1 <code class=\"language-text\">BytesIO</code> と <code class=\"language-text\">StringIO</code> の概要</strong></h3>\n<p><code class=\"language-text\">io.BytesIO</code> と <code class=\"language-text\">io.StringIO</code> は、<strong>メモリ上にファイルのようなオブジェクトを作成</strong>します。これにより、ディスクに書き込むことなく、データの一時保存と操作が可能です。</p>\n<ul>\n<li><strong><code class=\"language-text\">BytesIO</code></strong>: バイナリデータ（<code class=\"language-text\">bytes</code>）用</li>\n<li><strong><code class=\"language-text\">StringIO</code></strong>: テキストデータ（<code class=\"language-text\">str</code>）用</li>\n</ul>\n<h3 id=\"32-主な使い方\" style=\"position:relative;\"><a href=\"#32-%E4%B8%BB%E3%81%AA%E4%BD%BF%E3%81%84%E6%96%B9\" aria-label=\"32 主な使い方 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>3.2 主な使い方</strong></h3>\n<h4 id=\"code-classlanguage-textiobytesiocode-の使用例\" style=\"position:relative;\"><a href=\"#code-classlanguage-textiobytesiocode-%E3%81%AE%E4%BD%BF%E7%94%A8%E4%BE%8B\" aria-label=\"code classlanguage textiobytesiocode の使用例 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong><code class=\"language-text\">io.BytesIO</code> の使用例</strong></h4>\n<p>バイナリデータを扱う場合に便利です。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> io <span class=\"token keyword\">import</span> BytesIO\n\n<span class=\"token builtin\">buffer</span> <span class=\"token operator\">=</span> BytesIO<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token builtin\">buffer</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">b\"Binary data\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token builtin\">buffer</span><span class=\"token punctuation\">.</span>seek<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">buffer</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># b\"Binary data\"</span></code></pre></div>\n<h4 id=\"code-classlanguage-textiostringiocode-の使用例\" style=\"position:relative;\"><a href=\"#code-classlanguage-textiostringiocode-%E3%81%AE%E4%BD%BF%E7%94%A8%E4%BE%8B\" aria-label=\"code classlanguage textiostringiocode の使用例 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong><code class=\"language-text\">io.StringIO</code> の使用例</strong></h4>\n<p>文字列データを扱う場合に便利です。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> io <span class=\"token keyword\">import</span> StringIO\n\n<span class=\"token builtin\">buffer</span> <span class=\"token operator\">=</span> StringIO<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token builtin\">buffer</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">\"Temporary text data\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token builtin\">buffer</span><span class=\"token punctuation\">.</span>seek<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">buffer</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># \"Temporary text data\"</span></code></pre></div>\n<h2 id=\"4-ベストプラクティスと使い分け\" style=\"position:relative;\"><a href=\"#4-%E3%83%99%E3%82%B9%E3%83%88%E3%83%97%E3%83%A9%E3%82%AF%E3%83%86%E3%82%A3%E3%82%B9%E3%81%A8%E4%BD%BF%E3%81%84%E5%88%86%E3%81%91\" aria-label=\"4 ベストプラクティスと使い分け permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. ベストプラクティスと使い分け</h2>\n<h3 id=\"41-ファイルシステム-vs-メモリ\" style=\"position:relative;\"><a href=\"#41-%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0-vs-%E3%83%A1%E3%83%A2%E3%83%AA\" aria-label=\"41 ファイルシステム vs メモリ permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>4.1 ファイルシステム vs メモリ</strong></h3>\n<p>以下の基準で選択すると適切です：</p>\n<table>\n<thead>\n<tr>\n<th>要件</th>\n<th>選択</th>\n<th>理由</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>データをファイルシステムに保存</td>\n<td><code class=\"language-text\">tempfile</code></td>\n<td>ファイルとして他プロセスと共有可能</td>\n</tr>\n<tr>\n<td>データが少量で高速処理したい</td>\n<td><code class=\"language-text\">BytesIO</code>/<code class=\"language-text\">StringIO</code></td>\n<td>メモリ上で高速な読み書きが可能</td>\n</tr>\n<tr>\n<td>データが大量</td>\n<td><code class=\"language-text\">tempfile</code></td>\n<td>メモリ使用量を抑えられる</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"42-その他の注意点\" style=\"position:relative;\"><a href=\"#42-%E3%81%9D%E3%81%AE%E4%BB%96%E3%81%AE%E6%B3%A8%E6%84%8F%E7%82%B9\" aria-label=\"42 その他の注意点 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>4.2 その他の注意点</strong></h3>\n<ul>\n<li><strong>セキュリティ</strong>: 一時ファイルには重要な情報を保存しない。</li>\n<li><strong>リソース管理</strong>: 必ず <code class=\"language-text\">with</code> 文を使い、リソースを自動解放する。</li>\n<li><strong>クロスプラットフォーム対応</strong>: 名前付きファイルが必要な場合は <code class=\"language-text\">NamedTemporaryFile</code> を使用。</li>\n</ul>\n<h2 id=\"5-まとめ\" style=\"position:relative;\"><a href=\"#5-%E3%81%BE%E3%81%A8%E3%82%81\" aria-label=\"5 まとめ permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. まとめ</h2>\n<p>Python では、一時的にデータを保存するための強力なツールが用意されています。以下のポイントを押さえれば、適切なツールを選び、効率的なコードを書くことができます：</p>\n<ol>\n<li><strong>ファイルシステムに保存する場合</strong>は <code class=\"language-text\">tempfile</code>。</li>\n<li><strong>メモリに保存する場合</strong>は <code class=\"language-text\">BytesIO</code> や <code class=\"language-text\">StringIO</code>。</li>\n<li><strong>用途や環境に応じて適切なツールを選択する</strong>。</li>\n</ol>\n<p>これらのモジュールを理解し、正しく使いこなせば、開発効率やコードの信頼性を大幅に向上させることができます。ぜひ、日々のプログラミングで活用してみてください！</p>","frontmatter":{"title":"Pythonによる一時データ保存のベストプラクティス","date":"2025-01-26","description":"Pythonでデータを一時的に保存するための方法を徹底解説します。ファイルシステムとメモリの違い、それぞれのツールの使い分けを具体例とともに紹介します。","tags":["Python","tempfile"],"featuredImage":{"publicURL":"/static/58806ff8f67ddf870a8d9902f47dcd61/python2.jpg","childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/static/58806ff8f67ddf870a8d9902f47dcd61/3c367/python2.jpg","srcSet":"/static/58806ff8f67ddf870a8d9902f47dcd61/19e71/python2.jpg 128w,\n/static/58806ff8f67ddf870a8d9902f47dcd61/68974/python2.jpg 256w,\n/static/58806ff8f67ddf870a8d9902f47dcd61/3c367/python2.jpg 512w","sizes":"(min-width: 512px) 512px, 100vw"},"sources":[{"srcSet":"/static/58806ff8f67ddf870a8d9902f47dcd61/6766a/python2.webp 128w,\n/static/58806ff8f67ddf870a8d9902f47dcd61/22bfc/python2.webp 256w,\n/static/58806ff8f67ddf870a8d9902f47dcd61/d689f/python2.webp 512w","type":"image/webp","sizes":"(min-width: 512px) 512px, 100vw"}]},"width":512,"height":512}}}}},"relatedPosts":{"nodes":[]},"previous":{"fields":{"slug":"/arm-vs-intel-architecture/"},"frontmatter":{"title":"64ビットARMとIntelアーキテクチャの違い"}},"next":{"fields":{"slug":"/python-decimal-vs-float/"},"frontmatter":{"title":"PythonのdecimalモジュールとFloatOperationトラップを理解する"}}},"pageContext":{"id":"92b54d11-8dd6-57ed-9568-4ea55a829567","previousPostId":"2402e61a-9b26-59c4-ae16-107e98ad0a45","nextPostId":"b69f44f5-c741-56ee-8800-4422ffdd90ea","relatedPosts":[]}},"staticQueryHashes":["2841359383"],"slicesMap":{}}