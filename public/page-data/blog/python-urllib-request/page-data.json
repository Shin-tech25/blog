{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/python-urllib-request/","result":{"data":{"site":{"siteMetadata":{"title":"Developer's blog"}},"markdownRemark":{"id":"2551b0ba-fb6d-586d-9294-cc22c460cbc1","excerpt":"概要 Python の標準ライブラリ  は、Web 上のリソースにアクセスするためのインターフェースを提供します。HTTP…","tableOfContents":"<ul>\n<li>\n<p><a href=\"#%E6%A6%82%E8%A6%81\">概要</a></p>\n</li>\n<li>\n<p><a href=\"#code-classlanguage-texturllibrequestcode-%E3%81%AE%E5%9F%BA%E6%9C%AC\"><code class=\"language-text\">urllib.request</code> の基本</a></p>\n<ul>\n<li><a href=\"#code-classlanguage-texturlopencode-%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%97%E3%81%9F%E5%9F%BA%E6%9C%AC%E7%9A%84%E3%81%AA-get-%E3%83%AA%E3%82%AF%E3%82%A8%E3%82%B9%E3%83%88\"><code class=\"language-text\">urlopen()</code> を使用した基本的な GET リクエスト</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%E3%82%AF%E3%82%A8%E3%83%AA%E6%96%87%E5%AD%97%E5%88%97%E3%82%92%E5%90%AB%E3%82%80-get-%E3%83%AA%E3%82%AF%E3%82%A8%E3%82%B9%E3%83%88\">クエリ文字列を含む GET リクエスト</a></p>\n</li>\n<li>\n<p><a href=\"#code-classlanguage-textpostcode-%E3%83%A1%E3%82%BD%E3%83%83%E3%83%89%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%97%E3%81%9F%E3%83%AA%E3%82%AF%E3%82%A8%E3%82%B9%E3%83%88\"><code class=\"language-text\">POST</code> メソッドを使用したリクエスト</a></p>\n</li>\n<li>\n<p><a href=\"#code-classlanguage-textdeletecode-%E3%83%A1%E3%82%BD%E3%83%83%E3%83%89%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%97%E3%81%9F%E3%83%AA%E3%82%AF%E3%82%A8%E3%82%B9%E3%83%88\"><code class=\"language-text\">DELETE</code> メソッドを使用したリクエスト</a></p>\n</li>\n<li>\n<p><a href=\"#%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%A0%E3%83%98%E3%83%83%E3%83%80%E3%83%BC%E3%82%92%E8%A8%AD%E5%AE%9A%E3%81%99%E3%82%8B\">カスタムヘッダーを設定する</a></p>\n</li>\n<li>\n<p><a href=\"#%E3%83%AC%E3%82%B9%E3%83%9D%E3%83%B3%E3%82%B9%E3%81%AE%E5%87%A6%E7%90%86\">レスポンスの処理</a></p>\n<ul>\n<li><a href=\"#%E3%82%B9%E3%83%86%E3%83%BC%E3%82%BF%E3%82%B9%E3%82%B3%E3%83%BC%E3%83%89%E3%81%AE%E5%8F%96%E5%BE%97\">ステータスコードの取得</a></li>\n<li><a href=\"#%E3%83%98%E3%83%83%E3%83%80%E3%83%BC%E6%83%85%E5%A0%B1%E3%81%AE%E5%8F%96%E5%BE%97\">ヘッダー情報の取得</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#code-classlanguage-texturllibrequestcode-%E3%81%AE%E3%82%A8%E3%83%A9%E3%83%BC%E3%83%8F%E3%83%B3%E3%83%89%E3%83%AA%E3%83%B3%E3%82%B0\"><code class=\"language-text\">urllib.request</code> のエラーハンドリング</a></p>\n</li>\n<li>\n<p><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\">まとめ</a></p>\n</li>\n</ul>","html":"<h2 id=\"概要\" style=\"position:relative;\"><a href=\"#%E6%A6%82%E8%A6%81\" aria-label=\"概要 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>概要</h2>\n<p>Python の標準ライブラリ <code class=\"language-text\">urllib.request</code> は、Web 上のリソースにアクセスするためのインターフェースを提供します。HTTP リクエストを送信し、レスポンスを取得するための便利な機能が揃っています。</p>\n<p>公式ドキュメントでも、より高機能な <code class=\"language-text\">requests</code> ライブラリの使用が推奨されていますが、<code class=\"language-text\">urllib.request</code> は追加のライブラリをインストールすることなく、シンプルな HTTP リクエストを実装するのに適しています。</p>\n<p>本記事では、<code class=\"language-text\">urllib.request</code> を使用した基本的な HTTP リクエストの方法を解説し、GET・POST・DELETE などの HTTP メソッドの使い方や、レスポンスの処理方法について詳しく説明します。</p>\n<h2 id=\"code-classlanguage-texturllibrequestcode-の基本\" style=\"position:relative;\"><a href=\"#code-classlanguage-texturllibrequestcode-%E3%81%AE%E5%9F%BA%E6%9C%AC\" aria-label=\"code classlanguage texturllibrequestcode の基本 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">urllib.request</code> の基本</h2>\n<h3 id=\"code-classlanguage-texturlopencode-を使用した基本的な-get-リクエスト\" style=\"position:relative;\"><a href=\"#code-classlanguage-texturlopencode-%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%97%E3%81%9F%E5%9F%BA%E6%9C%AC%E7%9A%84%E3%81%AA-get-%E3%83%AA%E3%82%AF%E3%82%A8%E3%82%B9%E3%83%88\" aria-label=\"code classlanguage texturlopencode を使用した基本的な get リクエスト permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">urlopen()</code> を使用した基本的な GET リクエスト</h3>\n<p><code class=\"language-text\">urllib.request.urlopen()</code> を使用すると、シンプルな GET リクエストを実行できます。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> urllib <span class=\"token keyword\">import</span> request\n\n<span class=\"token comment\"># GETリクエストを送信</span>\n<span class=\"token keyword\">with</span> request<span class=\"token punctuation\">.</span>urlopen<span class=\"token punctuation\">(</span><span class=\"token string\">'https://httpbin.org/get'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> response<span class=\"token punctuation\">:</span>\n    res_data <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>res_data<span class=\"token punctuation\">)</span></code></pre></div>\n<p>このコードでは <code class=\"language-text\">urlopen()</code> に URL を渡すだけで、HTTP リクエストを送信し、レスポンスデータを取得できます。レスポンスは <code class=\"language-text\">bytes</code> 型で返されるため、デコードして <code class=\"language-text\">str</code> 型に変換する必要があります。</p>\n<h2 id=\"クエリ文字列を含む-get-リクエスト\" style=\"position:relative;\"><a href=\"#%E3%82%AF%E3%82%A8%E3%83%AA%E6%96%87%E5%AD%97%E5%88%97%E3%82%92%E5%90%AB%E3%82%80-get-%E3%83%AA%E3%82%AF%E3%82%A8%E3%82%B9%E3%83%88\" aria-label=\"クエリ文字列を含む get リクエスト permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>クエリ文字列を含む GET リクエスト</h2>\n<p>URL にクエリ文字列を含める場合、<code class=\"language-text\">urllib.parse</code> の <code class=\"language-text\">urlencode()</code> を利用すると便利です。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> urllib <span class=\"token keyword\">import</span> request<span class=\"token punctuation\">,</span> parse\n\n<span class=\"token comment\"># クエリパラメータを辞書で定義</span>\nparams <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"key1\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"value1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"key2\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"value2\"</span><span class=\"token punctuation\">}</span>\nquery_string <span class=\"token operator\">=</span> parse<span class=\"token punctuation\">.</span>urlencode<span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">)</span>\nurl <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"https://httpbin.org/get?</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>query_string<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span>\n\n<span class=\"token comment\"># GETリクエストを送信</span>\n<span class=\"token keyword\">with</span> request<span class=\"token punctuation\">.</span>urlopen<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> response<span class=\"token punctuation\">:</span>\n    res_data <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>res_data<span class=\"token punctuation\">)</span></code></pre></div>\n<p>辞書で定義したクエリパラメータを <code class=\"language-text\">urlencode()</code> でエンコードすることで、安全に URL へ埋め込むことができます。</p>\n<h2 id=\"code-classlanguage-textpostcode-メソッドを使用したリクエスト\" style=\"position:relative;\"><a href=\"#code-classlanguage-textpostcode-%E3%83%A1%E3%82%BD%E3%83%83%E3%83%89%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%97%E3%81%9F%E3%83%AA%E3%82%AF%E3%82%A8%E3%82%B9%E3%83%88\" aria-label=\"code classlanguage textpostcode メソッドを使用したリクエスト permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">POST</code> メソッドを使用したリクエスト</h2>\n<p>POST リクエストを送る場合、<code class=\"language-text\">urlopen()</code> の <code class=\"language-text\">data</code> 引数に <code class=\"language-text\">bytes</code> 型のデータを渡します。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> urllib <span class=\"token keyword\">import</span> request\n\nurl <span class=\"token operator\">=</span> <span class=\"token string\">\"https://httpbin.org/post\"</span>\ndata <span class=\"token operator\">=</span> <span class=\"token string\">\"key1=value1&amp;key2=value2\"</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># POSTリクエストを送信</span>\n<span class=\"token keyword\">with</span> request<span class=\"token punctuation\">.</span>urlopen<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> data<span class=\"token operator\">=</span>data<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> response<span class=\"token punctuation\">:</span>\n    res_data <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>res_data<span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-text\">data</code> は <code class=\"language-text\">bytes</code> 型である必要があるため、<code class=\"language-text\">.encode(\"utf-8\")</code> を使用してエンコードしています。</p>\n<h2 id=\"code-classlanguage-textdeletecode-メソッドを使用したリクエスト\" style=\"position:relative;\"><a href=\"#code-classlanguage-textdeletecode-%E3%83%A1%E3%82%BD%E3%83%83%E3%83%89%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%97%E3%81%9F%E3%83%AA%E3%82%AF%E3%82%A8%E3%82%B9%E3%83%88\" aria-label=\"code classlanguage textdeletecode メソッドを使用したリクエスト permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">DELETE</code> メソッドを使用したリクエスト</h2>\n<p>DELETE リクエストを送る場合、<code class=\"language-text\">Request</code> クラスを使用し、HTTP メソッドを明示的に指定します。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> urllib <span class=\"token keyword\">import</span> request\n\nurl <span class=\"token operator\">=</span> <span class=\"token string\">\"https://httpbin.org/delete\"</span>\nreq <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> method<span class=\"token operator\">=</span><span class=\"token string\">\"DELETE\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># DELETEリクエストを送信</span>\n<span class=\"token keyword\">with</span> request<span class=\"token punctuation\">.</span>urlopen<span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> response<span class=\"token punctuation\">:</span>\n    res_data <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>res_data<span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"カスタムヘッダーを設定する\" style=\"position:relative;\"><a href=\"#%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%A0%E3%83%98%E3%83%83%E3%83%80%E3%83%BC%E3%82%92%E8%A8%AD%E5%AE%9A%E3%81%99%E3%82%8B\" aria-label=\"カスタムヘッダーを設定する permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>カスタムヘッダーを設定する</h2>\n<p>HTTP リクエスト時にカスタムヘッダーを設定する場合、<code class=\"language-text\">Request</code> クラスの <code class=\"language-text\">headers</code> 引数に辞書を渡します。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> urllib <span class=\"token keyword\">import</span> request\n\nurl <span class=\"token operator\">=</span> <span class=\"token string\">\"https://httpbin.org/get\"</span>\nheaders <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"Accept\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"application/json\"</span><span class=\"token punctuation\">}</span>\nreq <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>headers<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">with</span> request<span class=\"token punctuation\">.</span>urlopen<span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> response<span class=\"token punctuation\">:</span>\n    res_data <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>res_data<span class=\"token punctuation\">)</span></code></pre></div>\n<p>これにより、リクエストに <code class=\"language-text\">Accept: application/json</code> ヘッダーを追加できます。</p>\n<h2 id=\"レスポンスの処理\" style=\"position:relative;\"><a href=\"#%E3%83%AC%E3%82%B9%E3%83%9D%E3%83%B3%E3%82%B9%E3%81%AE%E5%87%A6%E7%90%86\" aria-label=\"レスポンスの処理 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>レスポンスの処理</h2>\n<h3 id=\"ステータスコードの取得\" style=\"position:relative;\"><a href=\"#%E3%82%B9%E3%83%86%E3%83%BC%E3%82%BF%E3%82%B9%E3%82%B3%E3%83%BC%E3%83%89%E3%81%AE%E5%8F%96%E5%BE%97\" aria-label=\"ステータスコードの取得 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ステータスコードの取得</h3>\n<p>レスポンスオブジェクトには、HTTP ステータスコードを取得する <code class=\"language-text\">status</code> 属性があります。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> urllib <span class=\"token keyword\">import</span> request\n\nurl <span class=\"token operator\">=</span> <span class=\"token string\">\"https://httpbin.org/get\"</span>\n\n<span class=\"token keyword\">with</span> request<span class=\"token punctuation\">.</span>urlopen<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> response<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ステータスコード:\"</span><span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"ヘッダー情報の取得\" style=\"position:relative;\"><a href=\"#%E3%83%98%E3%83%83%E3%83%80%E3%83%BC%E6%83%85%E5%A0%B1%E3%81%AE%E5%8F%96%E5%BE%97\" aria-label=\"ヘッダー情報の取得 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ヘッダー情報の取得</h3>\n<p>レスポンスのヘッダー情報を取得するには <code class=\"language-text\">headers</code> 属性を利用します。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> urllib <span class=\"token keyword\">import</span> request\n\nurl <span class=\"token operator\">=</span> <span class=\"token string\">\"https://httpbin.org/get\"</span>\n\n<span class=\"token keyword\">with</span> request<span class=\"token punctuation\">.</span>urlopen<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> response<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"レスポンスヘッダー:\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>headers<span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"code-classlanguage-texturllibrequestcode-のエラーハンドリング\" style=\"position:relative;\"><a href=\"#code-classlanguage-texturllibrequestcode-%E3%81%AE%E3%82%A8%E3%83%A9%E3%83%BC%E3%83%8F%E3%83%B3%E3%83%89%E3%83%AA%E3%83%B3%E3%82%B0\" aria-label=\"code classlanguage texturllibrequestcode のエラーハンドリング permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">urllib.request</code> のエラーハンドリング</h2>\n<p><code class=\"language-text\">urllib.request</code> を使用する際には、<code class=\"language-text\">URLError</code> や <code class=\"language-text\">HTTPError</code> 例外に対応したエラーハンドリングを行うことが重要です。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> urllib <span class=\"token keyword\">import</span> request<span class=\"token punctuation\">,</span> error\n\nurl <span class=\"token operator\">=</span> <span class=\"token string\">\"https://httpbin.org/status/404\"</span>  <span class=\"token comment\"># 存在しないURL</span>\n\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">with</span> request<span class=\"token punctuation\">.</span>urlopen<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> response<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span> error<span class=\"token punctuation\">.</span>HTTPError <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"HTTPエラー: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>e<span class=\"token punctuation\">.</span>code<span class=\"token punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>e<span class=\"token punctuation\">.</span>reason<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span> error<span class=\"token punctuation\">.</span>URLError <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"URLエラー: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>e<span class=\"token punctuation\">.</span>reason<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>このコードでは、<code class=\"language-text\">HTTPError</code>（HTTP ステータスエラー）と <code class=\"language-text\">URLError</code>（無効な URL や接続エラー）をキャッチし、適切に処理しています。</p>\n<h2 id=\"まとめ\" style=\"position:relative;\"><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\" aria-label=\"まとめ permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>まとめ</h2>\n<p>本記事では、<code class=\"language-text\">urllib.request</code> を使用して HTTP リクエストを送る方法について解説しました。</p>\n<ul>\n<li><code class=\"language-text\">urlopen()</code> を使用した GET・POST リクエスト</li>\n<li><code class=\"language-text\">Request</code> クラスを用いた DELETE リクエスト</li>\n<li>クエリパラメータの組み込み</li>\n<li>カスタムヘッダーの設定</li>\n<li>レスポンスの処理（ステータスコード、ヘッダー情報）</li>\n<li>エラーハンドリング</li>\n</ul>\n<p>シンプルな HTTP リクエストを実装する場合には <code class=\"language-text\">urllib.request</code> で十分対応できますが、より柔軟で強力な機能を求める場合は <code class=\"language-text\">requests</code> ライブラリの利用を検討すると良いでしょう。</p>","frontmatter":{"title":"PythonでHTTPリクエストを送る - urllib.request","date":"2025-02-17","description":"Python標準ライブラリ urllib.request を使用して、GET・POST・DELETEなどのHTTPリクエストを送信し、レスポンスを取得する方法を解説します。","tags":["Python","urllib"],"featuredImage":{"publicURL":"/static/58806ff8f67ddf870a8d9902f47dcd61/python2.jpg","childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/static/58806ff8f67ddf870a8d9902f47dcd61/3c367/python2.jpg","srcSet":"/static/58806ff8f67ddf870a8d9902f47dcd61/19e71/python2.jpg 128w,\n/static/58806ff8f67ddf870a8d9902f47dcd61/68974/python2.jpg 256w,\n/static/58806ff8f67ddf870a8d9902f47dcd61/3c367/python2.jpg 512w","sizes":"(min-width: 512px) 512px, 100vw"},"sources":[{"srcSet":"/static/58806ff8f67ddf870a8d9902f47dcd61/6766a/python2.webp 128w,\n/static/58806ff8f67ddf870a8d9902f47dcd61/22bfc/python2.webp 256w,\n/static/58806ff8f67ddf870a8d9902f47dcd61/d689f/python2.webp 512w","type":"image/webp","sizes":"(min-width: 512px) 512px, 100vw"}]},"width":512,"height":512}}}}},"relatedPosts":{"nodes":[{"fields":{"slug":"/python-urlencode-parse_qs-parse_qsl/"},"frontmatter":{"title":"URLクエリ文字列の生成と解析におけるPythonの標準ライブラリ活用","date":"2025-02-03","tags":["Python","urllib"],"description":"Pythonの標準ライブラリであるurllib.parseモジュールを活用することで、これらのクエリ文字列を効率的に生成・解析できます。本記事では、urlencode、parse_qs、およびparse_qsl関数の役割や相互関係、具体的な使用方法について詳しく解説します。","featuredImage":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/static/58806ff8f67ddf870a8d9902f47dcd61/3c367/python2.jpg","srcSet":"/static/58806ff8f67ddf870a8d9902f47dcd61/19e71/python2.jpg 128w,\n/static/58806ff8f67ddf870a8d9902f47dcd61/68974/python2.jpg 256w,\n/static/58806ff8f67ddf870a8d9902f47dcd61/3c367/python2.jpg 512w","sizes":"(min-width: 512px) 512px, 100vw"},"sources":[{"srcSet":"/static/58806ff8f67ddf870a8d9902f47dcd61/6766a/python2.webp 128w,\n/static/58806ff8f67ddf870a8d9902f47dcd61/22bfc/python2.webp 256w,\n/static/58806ff8f67ddf870a8d9902f47dcd61/d689f/python2.webp 512w","type":"image/webp","sizes":"(min-width: 512px) 512px, 100vw"}]},"width":512,"height":512}}}}}]},"previous":{"fields":{"slug":"/python-traceback/"},"frontmatter":{"title":"Pythonでスタックトレースを扱う - traceback"}},"next":{"fields":{"slug":"/vscode-extensions-ruff/"},"frontmatter":{"title":"VSCodeでRuffを用いて静的解析、コードフォーマットを自動化する"}}},"pageContext":{"id":"2551b0ba-fb6d-586d-9294-cc22c460cbc1","previousPostId":"53a0b042-96de-5b92-a6c6-16aaf2aee156","nextPostId":"1ab529d1-e9dd-553a-af6d-2d113b088c21","relatedPosts":["/python-urlencode-parse_qs-parse_qsl/"]}},"staticQueryHashes":["2841359383"],"slicesMap":{}}