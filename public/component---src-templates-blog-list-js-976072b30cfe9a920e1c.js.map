{"version":3,"file":"component---src-templates-blog-list-js-976072b30cfe9a920e1c.js","mappings":"uLACWA,EAAS,mCACTC,EAAQ,kCACRC,EAAO,iCACPC,EAAQ,kCACR,EAAO,iCACP,EAAQ,kCACRC,EAAO,iCACPC,EAAO,iCACPC,EAAO,iCCJlB,MAAMC,EAAa,SAACC,EAASC,EAAOC,EAAUC,QAAN,IAAJD,IAAAA,EAAO,QAAS,IAANC,IAAAA,EAAS,GAErD,MAAMC,EAAQA,CAACC,EAAGC,IAAMC,MAAMC,KAAK,CAAEC,OAAQH,EAAID,EAAI,IAAK,CAACK,EAAGC,IAAMN,EAAIM,IAClEC,EAAM,IAAIC,IAChBT,EAAM,EAAGU,KAAKC,IAAIb,EAAMD,IAAQe,SAAQC,GAAKL,EAAIM,IAAID,KACrDb,EACEU,KAAKK,IAAI,EAAGnB,EAAUG,GACtBW,KAAKC,IAAId,EAAOD,EAAUG,IAC1Ba,SAAQC,GAAKL,EAAIM,IAAID,KACvBb,EAAMU,KAAKK,IAAI,EAAGlB,EAAQC,EAAO,GAAID,GAAOe,SAAQC,GAAKL,EAAIM,IAAID,KACjE,MAAMG,EAAUb,MAAMC,KAAKI,GAAKS,MAAK,CAACC,EAAGC,IAAMD,EAAIC,IAE7CC,EAAQ,GACd,IAAK,IAAIb,EAAI,EAAGA,EAAIS,EAAQX,OAAQE,IAC9BA,EAAI,GAAKS,EAAQT,GAAKS,EAAQT,EAAI,GAAK,GAAGa,EAAMC,KAAK,OACzDD,EAAMC,KAAKL,EAAQT,IAErB,OAAOa,CACT,EAGME,EAAoB,SAAC1B,EAASC,EAAO0B,GACzC,QADmD,IAAVA,IAAAA,EAAa,GAClD1B,GAAS0B,EAAY,OAAOpB,MAAMC,KAAK,CAAEC,OAAQR,IAAS,CAACS,EAAGC,IAAMA,EAAI,IAC5E,MAAMiB,EAAOd,KAAKe,MAAMF,EAAa,GACrC,IAAIG,EAAQ9B,EAAU4B,EAClBG,EAAM/B,EAAU4B,EASpB,OARIE,EAAQ,IACVA,EAAQ,EACRC,EAAMJ,GAEJI,EAAM9B,IACR8B,EAAM9B,EACN6B,EAAQ7B,EAAQ0B,EAAa,GAExBpB,MAAMC,KAAK,CAAEC,OAAQsB,EAAMD,EAAQ,IAAK,CAACpB,EAAGC,IAAMmB,EAAQnB,GACnE,EASe,SAASqB,EAAUC,GAI9B,IAJ+B,QACjCjC,EAAO,WACPkC,EAAU,SACVC,EAAW,SACZF,EACC,MAAOG,EAAOC,GAAYC,EAAAA,SAAe,KAGlCC,EAAUC,GAAeF,EAAAA,UAAe,IACxCG,EAAUC,GAAeJ,EAAAA,UAAe,GAC/CA,EAAAA,WAAgB,KAAO,IAADK,EAAAC,EACpB,MAAMC,EAAWC,OAAOC,WAAW,sBAC7BC,EAAWF,OAAOC,WAAW,sBAC7BE,EAASA,KACbT,EAAYK,EAASK,SACrBR,EAAYM,EAASE,QAAQ,EAK/B,OAHAD,IACyB,QAAzBN,EAAAE,EAASM,wBAAgB,IAAAR,GAAzBA,EAAAS,KAAAP,EAA4B,SAAUI,GACb,QAAzBL,EAAAI,EAASG,wBAAgB,IAAAP,GAAzBA,EAAAQ,KAAAJ,EAA4B,SAAUC,GAC/B,KAAO,IAADI,EAAAC,EACiB,QAA5BD,EAAAR,EAASU,2BAAmB,IAAAF,GAA5BA,EAAAD,KAAAP,EAA+B,SAAUI,GACb,QAA5BK,EAAAN,EAASO,2BAAmB,IAAAD,GAA5BA,EAAAF,KAAAJ,EAA+B,SAAUC,EAAO,CACjD,GACA,IAEH,MAAMO,EAAK3D,IACT,IAAKA,GAAQA,EAAO,GAAKA,EAAOqC,EAAY,OAG5C,MAAMuB,EAAiBC,OAAOvB,GAAUwB,QAAQ,OAAQ,IAClDC,EAAcH,EAAeE,QAAQ,UAAW,IAChDE,EAA2B,KAAhBD,EAAqB,IAAMA,EAAc,IACpDE,EAAWL,EAAiB,IACrB,IAAT5D,GAAYkE,EAAAA,EAAAA,UAASF,IACpBE,EAAAA,EAAAA,UAASD,EAAWjE,EAAO,IAAI,EAIhC2B,EAAQiB,EACVf,EAAkB1B,EAASkC,EAAY,GACvCnC,EAAWC,EAASkC,EAAY,EAAG,GAEvC,OACEI,EAAAA,cAAA,OAAK0B,UAAWC,EAAa,aAAW,cACtC3B,EAAAA,cAAA,UACE0B,UAAWC,EACXC,QAASA,IAAMV,EAAGxD,EAAU,GAC5BmE,SAAsB,IAAZnE,EACV,aAAW,iBAEXsC,EAAAA,cAAA,QAAM,kBAAY,MAGpBA,EAAAA,cAAA,MAAI0B,UAAWC,GACZzC,EAAM4C,KAAI,CAACC,EAAI1D,IACP,QAAP0D,EACE/B,EAAAA,cAAA,MAAIgC,IAAK,QAAQ3D,IAAKqD,UAAWC,EAAa,kBAAY,KAI1D3B,EAAAA,cAAA,MAAIgC,IAAKD,GACP/B,EAAAA,cAAA,UACE0B,UAAW,GAAGC,KACZI,IAAOrE,EAAUiE,EAAgB,KAEnC,eAAcI,IAAOrE,EAAU,YAASuE,EACxCL,QAASA,IAAMV,EAAGa,IAEjBA,OAOX/B,EAAAA,cAAA,UACE0B,UAAWC,EACXC,QAASA,IAAMV,EAAGxD,EAAU,GAC5BmE,SAAUnE,IAAYkC,EACtB,aAAW,aAEXI,EAAAA,cAAA,QAAM,kBAAY,OAIlBC,GACAD,EAAAA,cAAA,OAAK0B,UAAWC,GACd3B,EAAAA,cAAA,SACEkC,KAAK,SACLzD,IAAK,EACLI,IAAKe,EACLuC,UAAU,UACVC,MAAOtC,EACPuC,SAAUrE,GAAK+B,EAAS/B,EAAEsE,OAAOF,OACjCG,UAAWvE,GAAe,UAAVA,EAAEgE,KAAmBd,EAAGsB,OAAO1C,IAC/C4B,UAAWC,EACX,aAAW,eAEb3B,EAAAA,cAAA,UAAQ0B,UAAWC,EAAcC,QAASA,IAAMV,EAAGsB,OAAO1C,KAAS,OAO7E,C,kICnFA,MAnEyB2C,KAEvB,MAAMC,GAAOC,EAAAA,EAAAA,gBAAe,aA8BtBC,EAAeF,EAAKG,uBAAuBC,MAAMhB,KAAIiB,GAAQA,EAAKC,OAClEC,EAAWP,EAAKQ,kBAAkBJ,MAExC,OACE9C,EAAAA,cAAA,WAAS0B,UCxCiB,qDDyCxB1B,EAAAA,cAAA,MAAI0B,UCvCgB,iDDuCgB,oBACpC1B,EAAAA,cAAA,OAAK0B,UCzCW,6CD0CbkB,EAAad,KAAIkB,IAChB,MAAMG,EAAQF,EAASG,MAAKzE,GAAKA,EAAE0E,OAAOL,OAASA,IACnD,OAAKG,EAQHnD,EAAAA,cAACsD,EAAAA,EAAQ,CACPtB,IAAKgB,EACLO,KAAM,CACJP,KAAMG,EAAME,OAAOL,KACnBQ,MAAOL,EAAMM,YAAYD,MACzBE,KAAMP,EAAMM,YAAYC,KACxBC,KAAMR,EAAMM,YAAYE,KACxBC,YAAaT,EAAMM,YAAYG,YAC/BC,cAAeV,EAAMM,YAAYI,iBAdnC7D,EAAAA,cAAA,KAAGgC,IAAKgB,EAAMc,MAAO,CAAEC,MAAO,QAAS,iBACtBf,EAejB,KAIA,E,UExDH,EAAe,wCC0E1B,MA7EiBrD,IAAsC,IAArC,KAAE+C,EAAI,YAAEsB,EAAW,SAAEC,GAAUtE,EAC/C,MAAMuE,EAAQxB,EAAKQ,kBACbS,EAAOjB,EAAKyB,QAAQC,OACpB,YAAEC,EAAW,SAAEC,GAAaN,EAElC,GAAqB,IAAjBE,EAAM/F,OACR,OACE6B,EAAAA,cAACuE,EAAAA,EAAM,CAACN,SAAUA,GAChBjE,EAAAA,cAAA,SAAG,yBAKT,MAAMwE,EAAeC,IAAe,IAAd,KAAEd,GAAMc,EAC5B,IAAKd,GAAwB,IAAhBA,EAAKxF,OAChB,OAAO6B,EAAAA,cAAA,SAAG,kBAGZ,MAAM0E,EAAaf,EAChB5E,MAAK,CAACC,EAAGC,IAAMA,EAAE0F,WAAa3F,EAAE2F,aAChCC,MAAM,EAAG,IAEZ,OACE5E,EAAAA,cAAA,WAAS0B,UD1BW,yCC2BlB1B,EAAAA,cAAA,MAAI0B,UAAWC,GAAqB,gBACpC3B,EAAAA,cAAA,MAAI0B,UDpBS,oCCqBVgD,EAAW5C,KAAI+C,GACd7E,EAAAA,cAAA,MAAIgC,IAAK6C,EAAIC,WAAYpD,UDvBhB,oCCwBP1B,EAAAA,cAAC+E,EAAAA,KAAI,CAACC,GAAI,SAASC,IAAUJ,EAAIC,gBAC9BD,EAAIC,WAAW,KAAGD,EAAIF,WAAW,eAKlC,EAIRO,EAAkBA,IACtBlF,EAAAA,cAAA,OAAK0B,UD3CoB,4CC4CvB1B,EAAAA,cAACyC,EAAgB,MACjBzC,EAAAA,cAACwE,EAAY,CAACb,KAAMA,IAAQ,KAIhC,OACE3D,EAAAA,cAACuE,EAAAA,EAAM,CAACN,SAAUA,GACC,IAAhBI,GAAqBrE,EAAAA,cAACkF,EAAe,MACrB,IAAhBb,GACCrE,EAAAA,cAAA,MAAI0B,UAAWC,GAAqB,qBAEtC3B,EAAAA,cAAA,OAAK0B,UDjDW,qCCkDbwC,EAAMpB,MAAMhB,KAAIyB,GACfvD,EAAAA,cAACsD,EAAAA,EAAQ,CACPtB,IAAKuB,EAAKF,OAAOL,KACjBO,KAAM,CACJP,KAAMO,EAAKF,OAAOL,KAClBQ,MAAOD,EAAKE,YAAYD,MACxBE,KAAMH,EAAKE,YAAYC,KACvBC,KAAMJ,EAAKE,YAAYE,KACvBC,YAAaL,EAAKE,YAAYG,YAC9BC,cAAeN,EAAKE,YAAYI,oBAOxC7D,EAAAA,cAACN,EAAAA,EAAU,CACThC,QAAS2G,EACTzE,WAAY0E,EACZzE,SAAS,UAEJ,C","sources":["webpack://gatsby-starter-blog/./src/styles/pagination.module.css","webpack://gatsby-starter-blog/./src/components/pagination.js","webpack://gatsby-starter-blog/./src/components/featured-articles.js","webpack://gatsby-starter-blog/./src/styles/featured-articles.module.css","webpack://gatsby-starter-blog/./src/styles/blog-list.module.css","webpack://gatsby-starter-blog/./src/templates/blog-list.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var active = \"pagination-module--active--a4ef7\";\nexport var arrow = \"pagination-module--arrow--6e742\";\nexport var dots = \"pagination-module--dots--84ce6\";\nexport var goBtn = \"pagination-module--goBtn--9c4c3\";\nexport var goto = \"pagination-module--goto--4ed4d\";\nexport var input = \"pagination-module--input--302ae\";\nexport var list = \"pagination-module--list--c669a\";\nexport var page = \"pagination-module--page--0ae8d\";\nexport var wrap = \"pagination-module--wrap--a1691\";","import * as React from \"react\"\nimport { navigate } from \"gatsby\"\nimport * as styles from \"../styles/pagination.module.css\"\n\n// ---- PC用（省略記号あり） ----\nconst buildItems = (current, total, edge = 2, around = 1) => {\n  // 先頭 edge 件・末尾 edge 件・現在 around 件を表示し、間は \"…\" を挿入\n  const range = (s, e) => Array.from({ length: e - s + 1 }, (_, i) => s + i)\n  const set = new Set()\n  range(1, Math.min(edge, total)).forEach(p => set.add(p))\n  range(\n    Math.max(1, current - around),\n    Math.min(total, current + around)\n  ).forEach(p => set.add(p))\n  range(Math.max(1, total - edge + 1), total).forEach(p => set.add(p))\n  const ordered = Array.from(set).sort((a, b) => a - b)\n\n  const items = []\n  for (let i = 0; i < ordered.length; i++) {\n    if (i > 0 && ordered[i] - ordered[i - 1] > 1) items.push(\"...\")\n    items.push(ordered[i])\n  }\n  return items\n}\n\n// ---- モバイル／中間幅用（5件固定・省略記号なし） ----\nconst buildItemsCompact = (current, total, windowSize = 5) => {\n  if (total <= windowSize) return Array.from({ length: total }, (_, i) => i + 1)\n  const half = Math.floor(windowSize / 2)\n  let start = current - half\n  let end = current + half\n  if (start < 1) {\n    start = 1\n    end = windowSize\n  }\n  if (end > total) {\n    end = total\n    start = total - windowSize + 1\n  }\n  return Array.from({ length: end - start + 1 }, (_, i) => start + i)\n}\n\n/**\n * @param {object} props\n * @param {number} props.current 現在のページ(1始まり)\n * @param {number} props.totalPages 総ページ数\n * @param {string} [props.basePath=\"/page\"] 2ページ目以降のベース（末尾スラッシュ有りで遷移）\n *   例) ルート: \"/page\", タグ: `/tags/${tagKebab}/page`\n */\nexport default function Pagination({\n  current,\n  totalPages,\n  basePath = \"/page\",\n}) {\n  const [input, setInput] = React.useState(\"\")\n\n  // ブレークポイント（≤480px をモバイル、≤900px をナロー扱い）\n  const [isMobile, setIsMobile] = React.useState(false)\n  const [isNarrow, setIsNarrow] = React.useState(false)\n  React.useEffect(() => {\n    const mqMobile = window.matchMedia(\"(max-width: 480px)\")\n    const mqNarrow = window.matchMedia(\"(max-width: 900px)\")\n    const update = () => {\n      setIsMobile(mqMobile.matches)\n      setIsNarrow(mqNarrow.matches)\n    }\n    update()\n    mqMobile.addEventListener?.(\"change\", update)\n    mqNarrow.addEventListener?.(\"change\", update)\n    return () => {\n      mqMobile.removeEventListener?.(\"change\", update)\n      mqNarrow.removeEventListener?.(\"change\", update)\n    }\n  }, [])\n\n  const go = page => {\n    if (!page || page < 1 || page > totalPages) return\n    // basePath から 1ページ目のルートと 2ページ目以降のベースを導出\n    // 例) basePath=\"/tags/english/page\" → root=\"/tags/english/\", pageBase=\"/tags/english/page/\"\n    const normalizedBase = String(basePath).replace(/\\/+$/, \"\")\n    const rootPathRaw = normalizedBase.replace(/\\/page$/, \"\")\n    const rootPath = rootPathRaw === \"\" ? \"/\" : rootPathRaw + \"/\"\n    const pageBase = normalizedBase + \"/\"\n    if (page === 1) navigate(rootPath)\n    else navigate(pageBase + page + \"/\")\n  }\n\n  // PC: 省略記号あり / ≤900px: 5件固定（省略記号なし）\n  const items = isNarrow\n    ? buildItemsCompact(current, totalPages, 5)\n    : buildItems(current, totalPages, 2, 1)\n\n  return (\n    <nav className={styles.wrap} aria-label=\"Pagination\">\n      <button\n        className={styles.arrow}\n        onClick={() => go(current - 1)}\n        disabled={current === 1}\n        aria-label=\"Previous page\"\n      >\n        <span aria-hidden>‹</span>\n      </button>\n\n      <ul className={styles.list}>\n        {items.map((it, i) =>\n          it === \"...\" ? (\n            <li key={`dots-${i}`} className={styles.dots} aria-hidden>\n              …\n            </li>\n          ) : (\n            <li key={it}>\n              <button\n                className={`${styles.page} ${\n                  it === current ? styles.active : \"\"\n                }`}\n                aria-current={it === current ? \"page\" : undefined}\n                onClick={() => go(it)}\n              >\n                {it}\n              </button>\n            </li>\n          )\n        )}\n      </ul>\n\n      <button\n        className={styles.arrow}\n        onClick={() => go(current + 1)}\n        disabled={current === totalPages}\n        aria-label=\"Next page\"\n      >\n        <span aria-hidden>›</span>\n      </button>\n\n      {/* モバイル（≤480px）はGo一式を出さない。PC/中間幅はラベル無しで表示 */}\n      {!isMobile && (\n        <div className={styles.goto}>\n          <input\n            type=\"number\"\n            min={1}\n            max={totalPages}\n            inputMode=\"numeric\"\n            value={input}\n            onChange={e => setInput(e.target.value)}\n            onKeyDown={e => e.key === \"Enter\" && go(Number(input))}\n            className={styles.input}\n            aria-label=\"Go to page\"\n          />\n          <button className={styles.goBtn} onClick={() => go(Number(input))}>\n            Go\n          </button>\n        </div>\n      )}\n    </nav>\n  )\n}\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport PostItem from \"./post-item\"\nimport * as styles from \"../styles/featured-articles.module.css\"\n\nconst FeaturedArticles = () => {\n  // useStaticQueryフックでクエリを実行\n  const data = useStaticQuery(graphql`\n    query {\n      allPopularArticlesYaml {\n        nodes {\n          slug\n        }\n      }\n      allMarkdownRemark(\n        filter: { frontmatter: { templateKey: { eq: \"blog-post\" } } }\n      ) {\n        nodes {\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"YYYY-MM-DD\")\n            title\n            description\n            tags\n            featuredImage {\n              childImageSharp {\n                gatsbyImageData(layout: CONSTRAINED)\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  const popularSlugs = data.allPopularArticlesYaml.nodes.map(node => node.slug)\n  const allPosts = data.allMarkdownRemark.nodes\n\n  return (\n    <section className={styles.featuredArticles}>\n      <h2 className={styles.sectionTitle}>Popular articles</h2>\n      <div className={styles.postList}>\n        {popularSlugs.map(slug => {\n          const found = allPosts.find(p => p.fields.slug === slug)\n          if (!found) {\n            return (\n              <p key={slug} style={{ color: \"red\" }}>\n                該当記事が見つかりません: {slug}\n              </p>\n            )\n          }\n          return (\n            <PostItem\n              key={slug}\n              post={{\n                slug: found.fields.slug,\n                title: found.frontmatter.title,\n                date: found.frontmatter.date,\n                tags: found.frontmatter.tags,\n                description: found.frontmatter.description,\n                featuredImage: found.frontmatter.featuredImage,\n              }}\n            />\n          )\n        })}\n      </div>\n    </section>\n  )\n}\n\nexport default FeaturedArticles\n","// extracted by mini-css-extract-plugin\nexport var featuredArticles = \"featured-articles-module--featuredArticles--a8437\";\nexport var postList = \"featured-articles-module--postList--0d2e8\";\nexport var sectionTitle = \"featured-articles-module--sectionTitle--9d23c\";","// extracted by mini-css-extract-plugin\nexport var active = \"blog-list-module--active--cd174\";\nexport var articleLink = \"blog-list-module--articleLink--80dfa\";\nexport var articleList = \"blog-list-module--articleList--04ef3\";\nexport var blogList = \"blog-list-module--blogList--e9855\";\nexport var featuredSection = \"blog-list-module--featuredSection--dd552\";\nexport var featuredTags = \"blog-list-module--featuredTags--2e135\";\nexport var pagination = \"blog-list-module--pagination--b711c\";\nexport var paginationItem = \"blog-list-module--pagination-item--193b3\";\nexport var paginationNextPrev = \"blog-list-module--pagination-next-prev--bddff\";\nexport var paginationWrapper = \"blog-list-module--paginationWrapper--f7820\";\nexport var postList = \"blog-list-module--postList--8bb1e\";\nexport var sectionTitle = \"blog-list-module--sectionTitle--a32bb\";\nexport var tagItem = \"blog-list-module--tagItem--49e24\";\nexport var tagList = \"blog-list-module--tagList--35fd7\";","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport kebabCase from \"lodash/kebabCase\"\nimport Layout from \"../components/layout\"\nimport PostItem from \"../components/post-item\"\nimport FeaturedArticles from \"../components/featured-articles\"\nimport Pagination from \"../components/pagination\"\nimport * as styles from \"../styles/blog-list.module.css\"\n\nconst BlogList = ({ data, pageContext, location }) => {\n  const posts = data.allMarkdownRemark\n  const tags = data.allTags.group\n  const { currentPage, numPages } = pageContext\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location}>\n        <p>No blog posts found.</p>\n      </Layout>\n    )\n  }\n\n  const FeaturedTags = ({ tags }) => {\n    if (!tags || tags.length === 0) {\n      return <p>No tags found.</p> // タグが存在しない場合の処理\n    }\n    // タグを投稿数でソート（降順）し、上位20件を取得\n    const sortedTags = tags\n      .sort((a, b) => b.totalCount - a.totalCount)\n      .slice(0, 20)\n\n    return (\n      <section className={styles.featuredTags}>\n        <h2 className={styles.sectionTitle}>Popular tags</h2>\n        <ul className={styles.tagList}>\n          {sortedTags.map(tag => (\n            <li key={tag.fieldValue} className={styles.tagItem}>\n              <Link to={`/tags/${kebabCase(tag.fieldValue)}/`}>\n                {tag.fieldValue} ({tag.totalCount} posts)\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </section>\n    )\n  }\n\n  const FeaturedSection = () => (\n    <div className={styles.featuredSection}>\n      <FeaturedArticles />\n      <FeaturedTags tags={tags} /> {/* 全タグ情報を渡す */}\n    </div>\n  )\n\n  return (\n    <Layout location={location}>\n      {currentPage === 1 && <FeaturedSection />}\n      {currentPage === 1 && (\n        <h2 className={styles.sectionTitle}>Recent activities</h2>\n      )}\n      <div className={styles.postList}>\n        {posts.nodes.map(post => (\n          <PostItem\n            key={post.fields.slug}\n            post={{\n              slug: post.fields.slug,\n              title: post.frontmatter.title,\n              date: post.frontmatter.date,\n              tags: post.frontmatter.tags,\n              description: post.frontmatter.description,\n              featuredImage: post.frontmatter.featuredImage,\n            }}\n          />\n        ))}\n      </div>\n\n      {/* ページネーション */}\n      <Pagination\n        current={currentPage}\n        totalPages={numPages}\n        basePath=\"/page\"\n      />\n    </Layout>\n  )\n}\n\nexport default BlogList\n\nexport const pageQuery = graphql`\n  query ($skip: Int!, $limit: Int!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { frontmatter: { date: DESC } }\n      filter: { frontmatter: { templateKey: { eq: \"blog-post\" } } }\n      skip: $skip\n      limit: $limit\n    ) {\n      nodes {\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"YYYY-MM-DD\")\n          title\n          description\n          tags\n          featuredImage {\n            childImageSharp {\n              gatsbyImageData(layout: CONSTRAINED)\n            }\n          }\n        }\n      }\n    }\n    allTags: allMarkdownRemark(\n      filter: {\n        frontmatter: { templateKey: { eq: \"blog-post\" }, tags: { ne: null } }\n      }\n    ) {\n      group(field: { frontmatter: { tags: SELECT } }) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`\n"],"names":["active","arrow","dots","goBtn","list","page","wrap","buildItems","current","total","edge","around","range","s","e","Array","from","length","_","i","set","Set","Math","min","forEach","p","add","max","ordered","sort","a","b","items","push","buildItemsCompact","windowSize","half","floor","start","end","Pagination","_ref","totalPages","basePath","input","setInput","React","isMobile","setIsMobile","isNarrow","setIsNarrow","_mqMobile$addEventLis","_mqNarrow$addEventLis","mqMobile","window","matchMedia","mqNarrow","update","matches","addEventListener","call","_mqMobile$removeEvent","_mqNarrow$removeEvent","removeEventListener","go","normalizedBase","String","replace","rootPathRaw","rootPath","pageBase","navigate","className","styles","onClick","disabled","map","it","key","undefined","type","inputMode","value","onChange","target","onKeyDown","Number","FeaturedArticles","data","useStaticQuery","popularSlugs","allPopularArticlesYaml","nodes","node","slug","allPosts","allMarkdownRemark","found","find","fields","PostItem","post","title","frontmatter","date","tags","description","featuredImage","style","color","pageContext","location","posts","allTags","group","currentPage","numPages","Layout","FeaturedTags","_ref2","sortedTags","totalCount","slice","tag","fieldValue","Link","to","kebabCase","FeaturedSection"],"sourceRoot":""}